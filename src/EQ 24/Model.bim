{
  "name": "SemanticModel",
  "compatibilityLevel": 1200,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "name": "EdFi ODS",
        "connectionString": "Provider=SQLNCLI11;Data Source=localhost;Persist Security Info=false;User ID=ASRefresh_svc;Integrated Security=SSPI;Initial Catalog=EdFi_Ods_Sandbox_TD6AmbhZidtOEKNCoYJlj",
        "impersonationMode": "impersonateServiceAccount",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "SqlServer"
          }
        ]
      },
      {
        "name": "PowerBI Database",
        "connectionString": "Provider=SQLNCLI11;Data Source=localhost;Initial Catalog=PowerBI;User ID=ASRefresh_svc;Persist Security Info=false;Integrated Security=SSPI",
        "impersonationMode": "impersonateServiceAccount",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "SqlServer"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "EducationOrganization",
        "isHidden": true,
        "columns": [
          {
            "name": "EducationOrganizationId",
            "dataType": "int64",
            "sourceColumn": "EducationOrganizationId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "StateOrganizationId",
            "dataType": "string",
            "sourceColumn": "StateOrganizationId",
            "sourceProviderType": "WChar"
          },
          {
            "name": "NameOfInstitution",
            "dataType": "string",
            "sourceColumn": "NameOfInstitution",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyId"
          }
        ],
        "partitions": [
          {
            "name": "EducationOrganization",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [EducationOrganizationId]",
                "      ,[StateOrganizationId]",
                "      ,[NameOfInstitution]",
                "      ,[LocalEducationAgencyId]",
                "",
                "FROM [bi].[eq24.EducationOrganization]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [EducationOrganizationId]",
                  "      ,[StateOrganizationId]",
                  "      ,[NameOfInstitution]",
                  "      ,[LocalEducationAgencyId]",
                  "",
                  "FROM [bi].[eq24.EducationOrganization]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [EducationOrganizationId]",
              "      ,[StateOrganizationId]",
              "      ,[NameOfInstitution]",
              "      ,[LocalEducationAgencyId]",
              "",
              "FROM [bi].[eq24.EducationOrganization]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "EWS.EducationOrganization"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [EducationOrganizationId]",
              "      ,[StateOrganizationId]",
              "      ,[NameOfInstitution]",
              "      ,[LocalEducationAgencyId]",
              "",
              "FROM [bi].[eq24.EducationOrganization]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Student",
        "columns": [
          {
            "name": "StudentUSI",
            "dataType": "int64",
            "sourceColumn": "StudentUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "FirstName",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "FirstName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "MiddleName",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "MiddleName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LastSurname",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LastSurname",
            "sourceProviderType": "WChar"
          },
          {
            "name": "BirthDate",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "BirthDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "HispanicLatinoEthnicity",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "HispanicLatinoEthnicity",
            "sourceProviderType": "Boolean"
          },
          {
            "name": "OldEthnicityTypeId",
            "dataType": "int64",
            "sourceColumn": "OldEthnicityTypeId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "EconomicDisadvantaged",
            "dataType": "int64",
            "sourceColumn": "EconomicDisadvantaged",
            "sourceProviderType": "Boolean"
          },
          {
            "name": "CitizenshipStatusTypeId",
            "dataType": "int64",
            "sourceColumn": "CitizenshipStatusTypeId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "StudentUniqueId",
            "dataType": "string",
            "sourceColumn": "StudentUniqueId",
            "sourceProviderType": "WChar"
          },
          {
            "name": "SexType",
            "dataType": "string",
            "sourceColumn": "SexType",
            "sourceProviderType": "WChar"
          },
          {
            "type": "calculated",
            "name": "ESE",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF(",
              "",
              "     LOOKUPVALUE(StudentProgramAssociation[ProgramName], StudentProgramAssociation[StudentUSI],Student[StudentUSI]",
              "                                                       ,StudentProgramAssociation[ProgramName],\"Special Education\")  = \"Special Education\",\"Yes\", ",
              "",
              "     \"No\"",
              ")"
            ]
          },
          {
            "name": "FederalRace",
            "dataType": "string",
            "sourceColumn": "FederalRace"
          },
          {
            "type": "calculated",
            "name": "Flag Fail ELA/Math (Current)",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "var ELA = \"English Language Arts\"",
              "var Math = \"Mathematics\"",
              "",
              "/* NOTE: This is the the actual calculation.  We're storing it in a variable so that we can easily check if it's blank.  ",
              "The COUNTROWS DAX function returns a blank instead of 0, which renders as \"(BLANK)\" in Power BI. */",
              "",
              "var FailFilter  = FILTER(StudentCourseCurrent, ([Subject] = ELA || [Subject] = Math) ",
              "                                               && Student[StudentUSI] = StudentCourseCurrent[StudentUSI]",
              "                                               && StudentCourseCurrent[Flag Fail ELA/Math] = \"yes\"",
              "                       )",
              "var FailCount = COUNTROWS(FailFilter)",
              "",
              "return",
              "IF( FailCount > 0, 2, BLANK() )"
            ]
          },
          {
            "type": "calculated",
            "name": "FSA Math LastYearSubLevel",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "",
              "VAR ReportingMethod = 28",
              "VAR StateAssessmentTitle= \"State Assessment Math\"",
              "",
              "",
              "VAR MonthNow = MONTH(NOW())",
              "VAR YearAdminDate = IF( MonthNow < 8,YEAR(NOW()) - 1,YEAR(NOW()))",
              "",
              "VAR StudentAssessmentScoreResultTable =",
              "GENERATE (",
              "          SELECTCOLUMNS ( VALUES ( 'StudentAssessmentScoreResult'[StudentUSI] ), \"ID\", [StudentUSI] ),",
              "          CALCULATETABLE ( TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "\t                       'StudentAssessmentScoreResult'[StateAssessmentTitle] IN {StateAssessmentTitle},",
              "\t\t\t\t\t\t    Year('StudentAssessmentScoreResult'[AdministrationDate]) = YearAdminDate,",
              "\t\t\t\t\t\t   'StudentAssessmentScoreResult'[AssessmentReportingMethodTypeId] = ReportingMethod",
              "\t\t\t\t\t\t )",
              "         )",
              "",
              "return",
              "CALCULATE(AVERAGEX(StudentAssessmentScoreResultTable, VALUE([Learning Gain Level])))"
            ]
          },
          {
            "type": "calculated",
            "name": "FSA Math PreviousYearSubLevel",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "",
              "VAR ReportingMethod = 28",
              "VAR StateAssessmentTitle= \"State Assessment Math\"",
              "VAR MonthNow = MONTH(NOW())",
              "VAR YearAdminDate = IF( MonthNow < 8,YEAR(NOW()) - 2,YEAR(NOW())-1)",
              "",
              "VAR StudentAssessmentScoreResultTable =",
              "GENERATE (",
              "          SELECTCOLUMNS ( VALUES ( 'StudentAssessmentScoreResult'[StudentUSI] ), \"ID\", [StudentUSI] ),",
              "          CALCULATETABLE ( TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "\t\t                   'StudentAssessmentScoreResult'[StateAssessmentTitle] IN {StateAssessmentTitle},",
              "\t\t\t\t\t\t    Year('StudentAssessmentScoreResult'[AdministrationDate]) = YearAdminDate,",
              "\t\t\t\t\t\t   'StudentAssessmentScoreResult'[AssessmentReportingMethodTypeId] = ReportingMethod",
              "\t\t\t\t\t\t )",
              "         )",
              "",
              "return",
              "CALCULATE(AVERAGEX(StudentAssessmentScoreResultTable, VALUE([Learning Gain Level])))",
              "",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "Flag FSA MAth LearningGain",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF([FSA Math LastYearSubLevel] <> BLANK()",
              "    && [FSA Math PreviousYearSubLevel] <> BLANK()",
              "    && [FSA Math LastYearSubLevel] > [FSA Math PreviousYearSubLevel], \"+ improved\",",
              "IF([FSA Math LastYearSubLevel] <> BLANK()",
              "    && [FSA Math PreviousYearSubLevel] <> BLANK()",
              "    && [FSA Math LastYearSubLevel] < [FSA Math PreviousYearSubLevel], \"- regressed\",",
              "IF([FSA Math LastYearSubLevel] <> BLANK()",
              "    && [FSA Math PreviousYearSubLevel] <> BLANK()",
              "    && [FSA Math LastYearSubLevel] = [FSA Math PreviousYearSubLevel], \"0 stable\",",
              "BLANK()",
              ")))"
            ]
          },
          {
            "type": "calculated",
            "name": "FSA Math LastYearQuartile",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "",
              "VAR ReportingMethod = 28",
              "VAR StateAssessmentTitle= \"State Assessment Math\"",
              "VAR MonthNow = MONTH(NOW())",
              "VAR YearAdminDate = IF( MonthNow < 8,YEAR(NOW()) - 1,YEAR(NOW()))",
              "",
              "VAR StudentAssessmentScoreResultTable =",
              "GENERATE (",
              "          SELECTCOLUMNS ( VALUES ( 'StudentAssessmentScoreResult'[StudentUSI] ), \"ID\", [StudentUSI] ),",
              "          CALCULATETABLE ( TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "\t\t                   'StudentAssessmentScoreResult'[StateAssessmentTitle] IN {StateAssessmentTitle},",
              "\t\t\t\t\t\t    Year('StudentAssessmentScoreResult'[AdministrationDate]) = YearAdminDate,",
              "\t\t\t\t\t\t   'StudentAssessmentScoreResult'[AssessmentReportingMethodTypeId] = ReportingMethod",
              "\t\t\t\t\t\t )",
              "         )",
              "",
              "return",
              "CALCULATE(AVERAGEX(StudentAssessmentScoreResultTable, VALUE([Quartile])))",
              "",
              "",
              "",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "FSA Math PreviousYearQuartile",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "",
              "VAR ReportingMethod = 28",
              "",
              "VAR StateAssessmentTitle= \"State Assessment Math\"",
              "",
              "VAR MonthNow = MONTH(NOW())",
              "VAR YearAdminDate = IF( MonthNow < 8,YEAR(NOW()) - 2,YEAR(NOW())-1)",
              "",
              "VAR StudentAssessmentScoreResultTable =",
              "GENERATE (",
              "          SELECTCOLUMNS ( VALUES ( 'StudentAssessmentScoreResult'[StudentUSI] ), \"ID\", [StudentUSI] ),",
              "          CALCULATETABLE ( TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "\t\t                   'StudentAssessmentScoreResult'[StateAssessmentTitle] IN {StateAssessmentTitle},",
              "\t\t\t\t\t\t    Year('StudentAssessmentScoreResult'[AdministrationDate]) = YearAdminDate,",
              "\t\t\t\t\t\t   'StudentAssessmentScoreResult'[AssessmentReportingMethodTypeId] = ReportingMethod",
              "\t\t\t\t\t\t )",
              "         )",
              "",
              "return",
              "CALCULATE(AVERAGEX(StudentAssessmentScoreResultTable, VALUE([Quartile])))",
              "",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "Student Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " [LastSurname] & \",\" & \" \" & [FirstName]"
          },
          {
            "type": "calculated",
            "name": "FSA Math Trend Direction Last Two Years",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "",
              "VAR ReportingMethod = 28",
              "VAR StateAssessmentTitle= \"State Assessment Math\"",
              "",
              "var CurrentGradeTable = SUMMARIZE(FILTER(StudentSchoolAssociation,StudentSchoolAssociation[ExitWithdrawDate] = BLANK()",
              "                                                                   &&  StudentSchoolAssociation[SchoolId] <> 383518",
              "                                                                   && StudentSchoolAssociation[StudentUSI] = Student[StudentUSI]),                                       ",
              "                                            \"CurrentGrade\", MIN('StudentSchoolAssociation'[GradeLevel*]))",
              "",
              "var CurrentGrLev = CALCULATE(AVERAGEX(CurrentGradeTable, VALUE([CurrentGrade])))",
              "",
              "VAR ScoreGr3 = GENERATE (SELECTCOLUMNS ( VALUES ( 'StudentAssessmentScoreResult'[StudentUSI] ), \"ID\", [StudentUSI] ),",
              "                         CALCULATETABLE ( TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "\t\t                           'StudentAssessmentScoreResult'[StateAssessmentTitle] IN {StateAssessmentTitle},",
              "\t\t\t\t\t\t            'StudentAssessmentScoreResult'[GradeLevel] = 3,",
              "\t\t\t\t\t\t           'StudentAssessmentScoreResult'[AssessmentReportingMethodTypeId] = ReportingMethod))",
              "VAR ScoreGr4 = GENERATE (SELECTCOLUMNS ( VALUES ( 'StudentAssessmentScoreResult'[StudentUSI] ), \"ID\", [StudentUSI] ),",
              "                         CALCULATETABLE ( TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "\t\t                           'StudentAssessmentScoreResult'[StateAssessmentTitle] IN {StateAssessmentTitle},",
              "\t\t\t\t\t\t            'StudentAssessmentScoreResult'[GradeLevel] = 4,",
              "\t\t\t\t\t\t           'StudentAssessmentScoreResult'[AssessmentReportingMethodTypeId] = ReportingMethod))",
              "VAR ScoreGr5 = GENERATE (SELECTCOLUMNS ( VALUES ( 'StudentAssessmentScoreResult'[StudentUSI] ), \"ID\", [StudentUSI] ),",
              "                         CALCULATETABLE ( TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "\t\t                           'StudentAssessmentScoreResult'[StateAssessmentTitle] IN {StateAssessmentTitle},",
              "\t\t\t\t\t\t            'StudentAssessmentScoreResult'[GradeLevel] = 5,",
              "\t\t\t\t\t\t           'StudentAssessmentScoreResult'[AssessmentReportingMethodTypeId] = ReportingMethod))",
              "VAR ScoreGr6 = GENERATE (SELECTCOLUMNS ( VALUES ( 'StudentAssessmentScoreResult'[StudentUSI] ), \"ID\", [StudentUSI] ),",
              "                         CALCULATETABLE ( TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "\t\t                           'StudentAssessmentScoreResult'[StateAssessmentTitle] IN {StateAssessmentTitle},",
              "\t\t\t\t\t\t            'StudentAssessmentScoreResult'[GradeLevel] = 6,",
              "\t\t\t\t\t\t           'StudentAssessmentScoreResult'[AssessmentReportingMethodTypeId] = ReportingMethod))",
              "VAR ScoreGr7 = GENERATE (SELECTCOLUMNS ( VALUES ( 'StudentAssessmentScoreResult'[StudentUSI] ), \"ID\", [StudentUSI] ),",
              "                         CALCULATETABLE ( TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "\t\t                           'StudentAssessmentScoreResult'[StateAssessmentTitle] IN {StateAssessmentTitle},",
              "\t\t\t\t\t\t            'StudentAssessmentScoreResult'[GradeLevel] = 7,",
              "\t\t\t\t\t\t           'StudentAssessmentScoreResult'[AssessmentReportingMethodTypeId] = ReportingMethod))",
              "VAR ScoreGr8 = GENERATE (SELECTCOLUMNS ( VALUES ( 'StudentAssessmentScoreResult'[StudentUSI] ), \"ID\", [StudentUSI] ),",
              "                         CALCULATETABLE ( TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "\t\t                           'StudentAssessmentScoreResult'[StateAssessmentTitle] IN {StateAssessmentTitle},",
              "\t\t\t\t\t\t            'StudentAssessmentScoreResult'[GradeLevel] = 8,",
              "\t\t\t\t\t\t           'StudentAssessmentScoreResult'[AssessmentReportingMethodTypeId] = ReportingMethod))",
              "",
              "var res_Gr3 = CALCULATE(AVERAGEX(ScoreGr3, VALUE([Achievement Level %])))",
              "var res_Gr4 = CALCULATE(AVERAGEX(ScoreGr4, VALUE([Achievement Level %])))",
              "var res_Gr5 = CALCULATE(AVERAGEX(ScoreGr5, VALUE([Achievement Level %])))",
              "var res_Gr6 = CALCULATE(AVERAGEX(ScoreGr6, VALUE([Achievement Level %])))",
              "var res_Gr7 = CALCULATE(AVERAGEX(ScoreGr7, VALUE([Achievement Level %])))",
              "var res_Gr8 = CALCULATE(AVERAGEX(ScoreGr8, VALUE([Achievement Level %])))",
              "",
              "",
              "",
              "var TrendGr8 = IF(CurrentGrLev = 8 && res_Gr8 = BLANK() && res_Gr7 <> 0 && res_Gr6 <> 0 && (res_Gr7 - res_Gr6) > 0.1, \"improved\",",
              "               IF(CurrentGrLev = 8 && res_Gr8 = BLANK() && res_Gr7 <> 0 && res_Gr6 <> 0 && (res_Gr7 - res_Gr6) < -0.1, \"regressed\",",
              "               IF(CurrentGrLev = 8 && res_Gr8 = BLANK() && res_Gr7 <> 0 && res_Gr6 <> 0 && (res_Gr7 - res_Gr6) <= 0.1 && (res_Gr7 - res_Gr6) >= -0.1, \"stable\",",
              "               IF(CurrentGrLev = 8 && res_Gr8 = BLANK() && (res_Gr7 = 0 || res_Gr6 = 0), \"not available\",",
              "",
              "               IF(CurrentGrLev = 8 && res_Gr8 <> BLANK() && res_Gr8 <> 0 && res_Gr7 <> 0 && (res_Gr8 - res_Gr7) > 0.1, \"improved\",",
              "               IF(CurrentGrLev = 8 && res_Gr8 <> BLANK() && res_Gr8 <> 0 && res_Gr7 <> 0 && (res_Gr8 - res_Gr7) < -0.1, \"regressed\",",
              "               IF(CurrentGrLev = 8 && res_Gr8 <> BLANK() && res_Gr8 <> 0 && res_Gr7 <> 0 && (res_Gr8 - res_Gr7) <= 0.1 && (res_Gr8 - res_Gr7) >= -0.1, \"stable\",",
              "               IF(CurrentGrLev = 8 && res_Gr8 <> BLANK() && (res_Gr8 = 0 || res_Gr7 = 0), \"not available\"",
              "               ))))))))",
              "",
              "var TrendGr7 = IF(CurrentGrLev = 7 && res_Gr7 = BLANK() && res_Gr6 <> 0 && res_Gr5 <> 0 && (res_Gr6 - res_Gr5) > 0.1, \"improved\",",
              "               IF(CurrentGrLev = 7 && res_Gr7 = BLANK() && res_Gr6 <> 0 && res_Gr5 <> 0 && (res_Gr6 - res_Gr5) < -0.1, \"regressed\",",
              "               IF(CurrentGrLev = 7 && res_Gr7 = BLANK() && res_Gr6 <> 0 && res_Gr5 <> 0 && (res_Gr6 - res_Gr5) <= 0.1 && (res_Gr6 - res_Gr5) >= -0.1, \"stable\",",
              "               IF(CurrentGrLev = 7 && res_Gr7 = BLANK() && (res_Gr6 = 0 || res_Gr5 = 0), \"not available\",",
              "",
              "               IF(CurrentGrLev = 7 && res_Gr7 <> BLANK() && res_Gr7 <> 0 && res_Gr6 <> 0 && (res_Gr7 - res_Gr6) > 0.1, \"improved\",",
              "               IF(CurrentGrLev = 7 && res_Gr7 <> BLANK() && res_Gr7 <> 0 && res_Gr6 <> 0 && (res_Gr7 - res_Gr6) < -0.1, \"regressed\",",
              "               IF(CurrentGrLev = 7 && res_Gr7 <> BLANK() && res_Gr7 <> 0 && res_Gr6 <> 0 && (res_Gr7 - res_Gr6) <= 0.1 && (res_Gr7 - res_Gr6) >= -0.1, \"stable\",",
              "               IF(CurrentGrLev = 7 && res_Gr7 <> BLANK() && (res_Gr7 = 0 || res_Gr6 = 0), \"not available\"",
              "               ))))))))",
              "",
              "var TrendGr6 = IF(CurrentGrLev = 6 && res_Gr6 = BLANK() && res_Gr5 <> 0 && res_Gr4 <> 0 && (res_Gr5 - res_Gr4) > 0.1, \"improved\",",
              "               IF(CurrentGrLev = 6 && res_Gr6 = BLANK() && res_Gr5 <> 0 && res_Gr4 <> 0 && (res_Gr5 - res_Gr4) < -0.1, \"regressed\",",
              "               IF(CurrentGrLev = 6 && res_Gr6 = BLANK() && res_Gr5 <> 0 && res_Gr4 <> 0 && (res_Gr5 - res_Gr4) <= 0.1 && (res_Gr5 - res_Gr4) >= -0.1, \"stable\",",
              "               IF(CurrentGrLev = 6 && res_Gr6 = BLANK() && (res_Gr5 = 0 || res_Gr4 = 0), \"not available\",",
              "",
              "               IF(CurrentGrLev = 6 && res_Gr6 <> BLANK() && res_Gr6 <> 0 && res_Gr5 <> 0 && (res_Gr6 - res_Gr5) > 0.1, \"improved\",",
              "               IF(CurrentGrLev = 6 && res_Gr6 <> BLANK() && res_Gr6 <> 0 && res_Gr5 <> 0 && (res_Gr6 - res_Gr5) < -0.1, \"regressed\",",
              "               IF(CurrentGrLev = 6 && res_Gr6 <> BLANK() && res_Gr6 <> 0 && res_Gr5 <> 0 && (res_Gr6 - res_Gr5) <= 0.1 && (res_Gr6 - res_Gr5) >= -0.1, \"stable\",",
              "               IF(CurrentGrLev = 6 && res_Gr6 <> BLANK() && (res_Gr6 = 0 || res_Gr5 = 0), \"not available\"",
              "               ))))))))",
              "",
              "return ",
              "",
              "IF(CurrentGrLev = 8, TrendGr8,",
              "IF(CurrentGrLev = 7, TrendGr7,",
              "IF(CurrentGrLev = 6, TrendGr6,",
              "BLANK()",
              ")))",
              "",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "Current Grade Level",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              " CALCULATE([CurrentGradeLevel*],",
              "\tFILTER('StudentSchoolAssociation', 'StudentSchoolAssociation'[StudentUSI] = Student[StudentUSI])",
              "    )"
            ],
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "FSA Math Previous Year Achievement Level %",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "",
              "VAR ReportingMethod = 28",
              "VAR StateAssessmentTitle= \"State Assessment Math\"",
              "VAR MonthNow = MONTH(NOW())",
              "VAR YearAdminDate = IF( MonthNow < 8,YEAR(NOW()) - 2,YEAR(NOW())-1)",
              "",
              "VAR StudentAssessmentScoreResultTable =",
              "GENERATE (",
              "          SELECTCOLUMNS ( VALUES ( 'StudentAssessmentScoreResult'[StudentUSI] ), \"ID\", [StudentUSI] ),",
              "          CALCULATETABLE ( TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "\t\t                   'StudentAssessmentScoreResult'[StateAssessmentTitle] IN {StateAssessmentTitle},",
              "\t\t\t\t\t\t    Year('StudentAssessmentScoreResult'[AdministrationDate]) = YearAdminDate,",
              "\t\t\t\t\t\t   'StudentAssessmentScoreResult'[AssessmentReportingMethodTypeId] = ReportingMethod",
              "\t\t\t\t\t\t )",
              "         )",
              "",
              "return",
              "CALCULATE(AVERAGEX(StudentAssessmentScoreResultTable, VALUE([Achievement Level %])))"
            ],
            "formatString": "0.00"
          },
          {
            "type": "calculated",
            "name": "FSA Math Last Year Achievement Level %",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "",
              "VAR ReportingMethod = 28",
              "VAR StateAssessmentTitle= \"State Assessment Math\"",
              "",
              "",
              "VAR MonthNow = MONTH(NOW())",
              "VAR YearAdminDate = IF( MonthNow < 8,YEAR(NOW()) - 1,YEAR(NOW()))",
              "",
              "VAR StudentAssessmentScoreResultTable =",
              "GENERATE (",
              "          SELECTCOLUMNS ( VALUES ( 'StudentAssessmentScoreResult'[StudentUSI] ), \"ID\", [StudentUSI] ),",
              "          CALCULATETABLE ( TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "\t                       'StudentAssessmentScoreResult'[StateAssessmentTitle] IN {StateAssessmentTitle},",
              "\t\t\t\t\t\t    Year('StudentAssessmentScoreResult'[AdministrationDate]) = YearAdminDate,",
              "\t\t\t\t\t\t   'StudentAssessmentScoreResult'[AssessmentReportingMethodTypeId] = ReportingMethod",
              "\t\t\t\t\t\t )",
              "         )",
              "",
              "return",
              "CALCULATE(AVERAGEX(StudentAssessmentScoreResultTable, VALUE([Achievement Level %])))"
            ],
            "formatString": "0.00"
          },
          {
            "type": "calculated",
            "name": "HispanicLatino",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF([HispanicLatinoEthnicity] = \"TRUE\",\"Yes\", \"No\")"
            ]
          },
          {
            "type": "calculated",
            "name": "Current School ID",
            "dataType": "int64",
            "isDataTypeInferred": false,
            "expression": [
              " CALCULATE([CurrentSchoolID*],",
              "\tFILTER('StudentSchoolAssociation', 'StudentSchoolAssociation'[StudentUSI] = Student[StudentUSI])",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "FSA Math LastYearSubLevelString",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "",
              "IF([FSA Math LastYearSubLevel] = 5 , \"Level 5\",",
              "IF([FSA Math LastYearSubLevel] = 4 , \"Level 4\",",
              "IF([FSA Math LastYearSubLevel] = 3 , \"Level 3\",",
              "IF([FSA Math LastYearSubLevel] = 3.1 , \"Level 3 Low\",",
              "IF([FSA Math LastYearSubLevel] = 3.3 , \"Level 3 High\",",
              "IF([FSA Math LastYearSubLevel] = 2.1 , \"Level 2 Low\",",
              "IF([FSA Math LastYearSubLevel] = 2.3 , \"Level 2 High\",",
              "IF([FSA Math LastYearSubLevel] = 1.1 , \"Level 1 Low\",",
              "IF([FSA Math LastYearSubLevel] = 1.2 , \"Level 1 Mid\",",
              "IF([FSA Math LastYearSubLevel] = 1.3 , \"Level 1 High\"",
              "",
              "))))))))))"
            ]
          },
          {
            "type": "calculated",
            "name": "FSA Math PreviousYearSubLevelString",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "",
              "IF([FSA Math PreviousYearSubLevel] = 5 , \"Level 5\",",
              "IF([FSA Math PreviousYearSubLevel] = 4 , \"Level 4\",",
              "IF([FSA Math PreviousYearSubLevel] = 3 , \"Level 3\",",
              "IF([FSA Math PreviousYearSubLevel] = 3.1 , \"Level 3 Low\",",
              "IF([FSA Math PreviousYearSubLevel] = 3.3 , \"Level 3 High\",",
              "IF([FSA Math PreviousYearSubLevel] = 2.1 , \"Level 2 Low\",",
              "IF([FSA Math PreviousYearSubLevel] = 2.3 , \"Level 2 High\",",
              "IF([FSA Math PreviousYearSubLevel] = 1.1 , \"Level 1 Low\",",
              "IF([FSA Math PreviousYearSubLevel] = 1.2 , \"Level 1 Mid\",",
              "IF([FSA Math PreviousYearSubLevel] = 1.3 , \"Level 1 High\"",
              "",
              "))))))))))"
            ]
          },
          {
            "type": "calculated",
            "name": "FSA Math Trend % Difference",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF([FSA Math Last Year Achievement Level %] <> BLANK() && [FSA Math Previous Year Achievement Level %] <> BLANK(),",
              "                     [FSA Math Last Year Achievement Level %] - [FSA Math Previous Year Achievement Level %],",
              "BLANK()",
              ")"
            ],
            "formatString": "0.00"
          }
        ],
        "partitions": [
          {
            "name": "Student",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [StudentUSI]",
                "      ,[FirstName]",
                "      ,[MiddleName]",
                "      ,[LastSurname]",
                "      ,[SexType]",
                "      ,[BirthDate]",
                "      ,[HispanicLatinoEthnicity]",
                "      ,[OldEthnicityTypeId]",
                "      ,[EconomicDisadvantaged]",
                "      ,[CitizenshipStatusTypeId]",
                "      ,[StudentUniqueId]",
                "      ,[FederalRace]",
                "FROM [bi].[eq24.Student]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [StudentUSI]",
                  "      ,[FirstName]",
                  "      ,[MiddleName]",
                  "      ,[LastSurname]",
                  "      ,[SexType]",
                  "      ,[BirthDate]",
                  "      ,[HispanicLatinoEthnicity]",
                  "      ,[OldEthnicityTypeId]",
                  "      ,[EconomicDisadvantaged]",
                  "      ,[CitizenshipStatusTypeId]",
                  "      ,[StudentUniqueId]",
                  "      ,[FederalRace]",
                  "FROM [bi].[eq24.Student]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "CurrentGradeLevel*",
            "expression": [
              "",
              "",
              "var CurrentGradeTable = SUMMARIZE(FILTER(StudentSchoolAssociation,StudentSchoolAssociation[ExitWithdrawDate] = BLANK()",
              "                                                                   &&  StudentSchoolAssociation[SchoolId] <> 383518",
              "                                                                   &&  StudentSchoolAssociation[SchoolId] <> 150022),",
              "                                       [StudentUSI],",
              "                                      \"CurrentGrade\", MIN('StudentSchoolAssociation'[GradeLevel*])",
              "                                       )",
              "",
              "return",
              "CALCULATE(AVERAGEX(CurrentGradeTable, VALUE([CurrentGrade])))"
            ],
            "isHidden": true
          },
          {
            "name": "CurrentSchoolID*",
            "expression": [
              "",
              "",
              "var CurrentSchoolTable = SUMMARIZE(FILTER(StudentSchoolAssociation,StudentSchoolAssociation[ExitWithdrawDate] = BLANK()",
              "                                                                   ),",
              "                                       [StudentUSI],",
              "                                      \"SchoolId\", MIN('StudentSchoolAssociation'[SchoolId])",
              "                                       )",
              "",
              "return",
              "CALCULATE(AVERAGEX(CurrentSchoolTable, VALUE([SchoolId])))"
            ],
            "isHidden": true
          },
          {
            "name": "Number Of Filtered Records",
            "expression": [
              " ",
              "",
              "COUNTROWS(ALLSELECTED(Student[Student Name]))"
            ]
          },
          {
            "name": "FSA Trend Last Two Years Improved",
            "expression": [
              "",
              "",
              "var filteredTable = FILTER(Student, [Flag FSA MAth LearningGain] = \"+ improved\")",
              "var count_Rows = COUNTROWS(filteredTable)",
              "",
              "return",
              "IF(count_Rows = BLANK(),0,count_Rows)"
            ]
          },
          {
            "name": "FSA Trend Last Two Years Regressed",
            "expression": [
              "",
              "",
              "var filteredTable = FILTER(Student, [Flag FSA MAth LearningGain] = \"- regressed\")",
              "var count_Rows = COUNTROWS(filteredTable)",
              "",
              "return",
              "IF(count_Rows = BLANK(),0,count_Rows)"
            ]
          },
          {
            "name": "FSA Trend Last Two Years Stable",
            "expression": [
              "",
              "",
              "var filteredTable = FILTER(Student, [Flag FSA MAth LearningGain] = \"0 stable\")",
              "var count_Rows = COUNTROWS(filteredTable)",
              "",
              "return",
              "IF(count_Rows = BLANK(),0,count_Rows)"
            ]
          },
          {
            "name": "FSA Trend Last Two Years Not Available",
            "expression": [
              "",
              "",
              "var filteredTable = FILTER(Student, [Flag FSA MAth LearningGain] = BLANK())",
              "var count_Rows = COUNTROWS(filteredTable)",
              "",
              "return",
              "IF(count_Rows = BLANK(),0,count_Rows)"
            ]
          },
          {
            "name": "FSA Number of Students",
            "expression": [
              " ",
              "",
              "",
              "[FSA Trend Last Two Years Improved]+[FSA Trend Last Two Years Regressed]+[FSA Trend Last Two Years Stable]+[FSA Trend Last Two Years Not Available]"
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [StudentUSI]",
              "      ,[FirstName]",
              "      ,[MiddleName]",
              "      ,[LastSurname]",
              "      ,[SexType]",
              "      ,[BirthDate]",
              "      ,[HispanicLatinoEthnicity]",
              "      ,[OldEthnicityTypeId]",
              "      ,[EconomicDisadvantaged]",
              "      ,[CitizenshipStatusTypeId]",
              "      ,[StudentUniqueId]",
              "      ,[FederalRace]",
              "FROM [bi].[eq24.Student]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "EWS.Student"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [StudentUSI]",
              "      ,[FirstName]",
              "      ,[MiddleName]",
              "      ,[LastSurname]",
              "      ,[SexType]",
              "      ,[BirthDate]",
              "      ,[HispanicLatinoEthnicity]",
              "      ,[OldEthnicityTypeId]",
              "      ,[EconomicDisadvantaged]",
              "      ,[CitizenshipStatusTypeId]",
              "      ,[StudentUniqueId]",
              "      ,[FederalRace]",
              "FROM [bi].[eq24.Student]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StudentSchoolAssociation",
        "isHidden": true,
        "columns": [
          {
            "name": "StudentUSI",
            "dataType": "int64",
            "sourceColumn": "StudentUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SchoolId",
            "dataType": "int64",
            "sourceColumn": "SchoolId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "EntryDate",
            "dataType": "dateTime",
            "sourceColumn": "EntryDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Grade Level",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Grade Level",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ExitWithdrawDate",
            "dataType": "dateTime",
            "sourceColumn": "ExitWithdrawDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "NameOfInstitution",
            "dataType": "string",
            "sourceColumn": "NameOfInstitution"
          },
          {
            "name": "ExitWithdrawCode",
            "dataType": "string",
            "sourceColumn": "ExitWithdrawCode"
          },
          {
            "name": "ExitWithdrawDescription",
            "dataType": "string",
            "sourceColumn": "ExitWithdrawDescription"
          },
          {
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyId"
          },
          {
            "name": "ClassOfSchoolYear",
            "dataType": "int64",
            "sourceColumn": "ClassOfSchoolYear"
          },
          {
            "name": "GraduationSchoolYear",
            "dataType": "int64",
            "sourceColumn": "GraduationSchoolYear"
          },
          {
            "type": "calculated",
            "name": "GradeLevel",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "/*This column is used for visual filtering*/",
              "IF([Grade Level] = \"First Grade\", \"01\",",
              "IF([Grade Level] = \"Second Grade\", \"02\",",
              "IF([Grade Level] = \"Third Grade\", \"03\",",
              "IF([Grade Level] = \"Fourth Grade\", \"04\",",
              "IF([Grade Level] = \"Fifth Grade\", \"05\",",
              "IF([Grade Level] = \"Sixth Grade\", \"06\",",
              "IF([Grade Level] = \"Seventh Grade\", \"07\",",
              "IF([Grade Level] = \"Eighth Grade\", \"08\",",
              "IF([Grade Level] = \"Ninth Grade\", \"09\",",
              "IF([Grade Level] = \"Tenth Grade\", \"10\",",
              "IF([Grade Level] = \"Eleventh Grade\", \"11\",",
              "IF([Grade Level] = \"Twelfth Grade\", \"12\",",
              "IF([Grade Level] = \"Kindergarten\", \"K\",",
              "IF([Grade Level] = \"Pre-K\", \"PK\",",
              " \"Other\"",
              "))))))))))))))"
            ]
          },
          {
            "type": "calculated",
            "name": "GradeLevel*",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "/*This column is used for calculations, all should be numbers*/",
              "IF([Grade Level] = \"First Grade\", \"01\",",
              "IF([Grade Level] = \"Second Grade\", \"02\",",
              "IF([Grade Level] = \"Third Grade\", \"03\",",
              "IF([Grade Level] = \"Fourth Grade\", \"04\",",
              "IF([Grade Level] = \"Fifth Grade\", \"05\",",
              "IF([Grade Level] = \"Sixth Grade\", \"06\",",
              "IF([Grade Level] = \"Seventh Grade\", \"07\",",
              "IF([Grade Level] = \"Eighth Grade\", \"08\",",
              "IF([Grade Level] = \"Ninth Grade\", \"09\",",
              "IF([Grade Level] = \"Tenth Grade\", \"10\",",
              "IF([Grade Level] = \"Eleventh Grade\", \"11\",",
              "IF([Grade Level] = \"Twelfth Grade\", \"12\",",
              "IF([Grade Level] = \"Kindergarten\", \"0\",",
              "IF([Grade Level] = \"Pre-K\", \"-1\",",
              "BLANK()",
              "))))))))))))))"
            ]
          },
          {
            "name": "EntryGradeLevelDescriptorId",
            "dataType": "int64",
            "sourceColumn": "EntryGradeLevelDescriptorId"
          },
          {
            "name": "GradeLevelNum",
            "dataType": "string",
            "sourceColumn": "GradeLevelNum"
          }
        ],
        "partitions": [
          {
            "name": "StudentSchoolAssociation",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [StudentUSI]",
                "      ,[SchoolId]",
                "      ,[NameOfInstitution]",
                "      ,[SchoolYear]",
                "      ,[EntryDate]",
                "      ,[EntryGradeLevelDescriptorId]",
                "      ,[Grade Level]",
                "      ,[GradeLevelNum]",
                "      ,[ExitWithdrawDate]",
                "      ,[ExitWithdrawCode]",
                "      ,[ExitWithdrawDescription]",
                "      ,[ClassOfSchoolYear]",
                "      ,[GraduationSchoolYear]",
                "      ,[LocalEducationAgencyId]",
                "FROM [bi].[eq24.StudentSchoolAssociation]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [StudentUSI]",
                  "      ,[SchoolId]",
                  "      ,[NameOfInstitution]",
                  "      ,[SchoolYear]",
                  "      ,[EntryDate]",
                  "      ,[EntryGradeLevelDescriptorId]",
                  "      ,[Grade Level]",
                  "      ,[GradeLevelNum]",
                  "      ,[ExitWithdrawDate]",
                  "      ,[ExitWithdrawCode]",
                  "      ,[ExitWithdrawDescription]",
                  "      ,[ClassOfSchoolYear]",
                  "      ,[GraduationSchoolYear]",
                  "      ,[LocalEducationAgencyId]",
                  "FROM [bi].[eq24.StudentSchoolAssociation]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [StudentUSI]",
              "      ,[SchoolId]",
              "      ,[NameOfInstitution]",
              "      ,[SchoolYear]",
              "      ,[EntryDate]",
              "      ,[EntryGradeLevelDescriptorId]",
              "      ,[Grade Level]",
              "      ,[GradeLevelNum]",
              "      ,[ExitWithdrawDate]",
              "      ,[ExitWithdrawCode]",
              "      ,[ExitWithdrawDescription]",
              "      ,[ClassOfSchoolYear]",
              "      ,[GraduationSchoolYear]",
              "      ,[LocalEducationAgencyId]",
              "FROM [bi].[eq24.StudentSchoolAssociation]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "EWS.StudentSchoolAssociation"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [StudentUSI]",
              "      ,[SchoolId]",
              "      ,[NameOfInstitution]",
              "      ,[SchoolYear]",
              "      ,[EntryDate]",
              "      ,[EntryGradeLevelDescriptorId]",
              "      ,[Grade Level]",
              "      ,[GradeLevelNum]",
              "      ,[ExitWithdrawDate]",
              "      ,[ExitWithdrawCode]",
              "      ,[ExitWithdrawDescription]",
              "      ,[ClassOfSchoolYear]",
              "      ,[GraduationSchoolYear]",
              "      ,[LocalEducationAgencyId]",
              "FROM [bi].[eq24.StudentSchoolAssociation]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StudentSectionAssociation",
        "columns": [
          {
            "name": "StudentUSI",
            "dataType": "int64",
            "sourceColumn": "StudentUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SchoolId",
            "dataType": "int64",
            "sourceColumn": "SchoolId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ClassPeriodName",
            "dataType": "string",
            "sourceColumn": "ClassPeriodName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ClassroomIdentificationCode",
            "dataType": "string",
            "sourceColumn": "ClassroomIdentificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LocalCourseCode",
            "dataType": "string",
            "sourceColumn": "LocalCourseCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "UniqueSectionCode",
            "dataType": "string",
            "sourceColumn": "UniqueSectionCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "SequenceOfCourse",
            "dataType": "int64",
            "sourceColumn": "SequenceOfCourse",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "BeginDate",
            "dataType": "dateTime",
            "sourceColumn": "BeginDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "EndDate",
            "dataType": "dateTime",
            "sourceColumn": "EndDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "HomeroomIndicator",
            "dataType": "boolean",
            "sourceColumn": "HomeroomIndicator",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "Boolean"
          },
          {
            "name": "Term",
            "dataType": "string",
            "sourceColumn": "Term"
          },
          {
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyId"
          },
          {
            "type": "calculated",
            "name": "StaffUSI_A",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "",
              "var FirstStaffUSI = CALCULATE(",
              "\t\t\tFIRSTNONBLANK(StaffSectionAssociation[StaffUSI], TRUE()),",
              "\t\t\tFILTER(StaffSectionAssociation, StaffSectionAssociation[SchoolId] = StudentSectionAssociation[SchoolId] &&",
              "\t\t\t\t\t\t\tStaffSectionAssociation[UniqueSectionCode] = StudentSectionAssociation[UniqueSectionCode] &&",
              "\t\t\t\t\t\t\tStaffSectionAssociation[LocalCourseCode] = StudentSectionAssociation[LocalCourseCode] &&",
              "\t\t\t\t\t\t\tStaffSectionAssociation[SchoolYear] = StudentSectionAssociation[SchoolYear] &&",
              "\t\t\t\t\t\t\tStaffSectionAssociation[Term] = StudentSectionAssociation[Term])",
              "\t\t)",
              "",
              "return",
              "FirstStaffUSI",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "StaffUSI_B",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "",
              "var FirstStaffUSI = CALCULATE(",
              "\t\t\tLASTNONBLANK(StaffSectionAssociation[StaffUSI], TRUE()),",
              "\t\t\tFILTER(StaffSectionAssociation, StaffSectionAssociation[SchoolId] = StudentSectionAssociation[SchoolId] &&",
              "\t\t\t\t\t\t\tStaffSectionAssociation[UniqueSectionCode] = StudentSectionAssociation[UniqueSectionCode] &&",
              "\t\t\t\t\t\t\tStaffSectionAssociation[LocalCourseCode] = StudentSectionAssociation[LocalCourseCode] &&",
              "\t\t\t\t\t\t\tStaffSectionAssociation[SchoolYear] = StudentSectionAssociation[SchoolYear] &&",
              "\t\t\t\t\t\t\tStaffSectionAssociation[Term] = StudentSectionAssociation[Term])",
              "\t\t)",
              "",
              "return",
              "FirstStaffUSI",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "SectionKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "         [SchoolId]",
              " & \"^\" & [ClassroomIdentificationCode]",
              " & \"^\" & [LocalCourseCode]",
              " & \"^\" & [Term]",
              " & \"^\" & [SchoolId]",
              " & \"^\" & [UniqueSectionCode]",
              " & \"^\" & [ClassPeriodName]"
            ]
          },
          {
            "type": "calculated",
            "name": "StudentSectionKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "         [StudentUSI]",
              " & \"^\" & [LocalCourseCode]",
              " & \"^\" & [Term]",
              " & \"^\" & [UniqueSectionCode]",
              " & \"^\" & [BeginDate]",
              " & \"^\" & [SchoolYear]"
            ]
          },
          {
            "type": "calculated",
            "name": "Dropped",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF([EndDate] < TODAY(),1,BLANK())"
            ]
          },
          {
            "type": "calculated",
            "name": "Student Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " LOOKUPVALUE(Student[Student Name],Student[StudentUSI],StudentSectionAssociation[StudentUSI])"
          },
          {
            "type": "calculated",
            "name": "SchoolName",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "LOOKUPVALUE(School[School Name],School[SchoolId],StudentSectionAssociation[SchoolId])"
          },
          {
            "type": "calculated",
            "name": "SchoolName FocusGroup",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " IF([SchoolName] = \"Belle Terre Elementary School\", \"School A\",",
              "IF([SchoolName] = \"Buddy Taylor Middle School\", \"School B\",",
              "IF([SchoolName] = \"Bunnell Elementary School\", \"School C\",",
              "IF([SchoolName] = \"iFlagler\", \"School D\",",
              "IF([SchoolName] = \"Indian Trails Middle School\", \"School F\",",
              "IF([SchoolName] = \"Old Kings Elementary School\", \"School G\",",
              "IF([SchoolName] = \"Rymfire Elementary SchoolRymfire Elementary School\", \"School H\",",
              "IF([SchoolName] = \"Wadsworth Elementary School\", \"School K\",",
              "BLANK()",
              "))))))))"
            ]
          }
        ],
        "partitions": [
          {
            "name": "StudentSectionAssociation",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [StudentUSI]",
                "      ,[SchoolId]",
                "      ,[ClassPeriodName]",
                "      ,[ClassroomIdentificationCode]",
                "      ,[LocalCourseCode]",
                "      ,[UniqueSectionCode]",
                "      ,[SequenceOfCourse]",
                "      ,[SchoolYear]",
                "      ,[Term]",
                "      ,[BeginDate]",
                "      ,[EndDate]",
                "      ,[HomeroomIndicator]",
                "      ,[LocalEducationAgencyId]",
                "  FROM [bi].[EQ24.StudentSectionAssociation]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [StudentUSI]",
                  "      ,[SchoolId]",
                  "      ,[ClassPeriodName]",
                  "      ,[ClassroomIdentificationCode]",
                  "      ,[LocalCourseCode]",
                  "      ,[UniqueSectionCode]",
                  "      ,[SequenceOfCourse]",
                  "      ,[SchoolYear]",
                  "      ,[Term]",
                  "      ,[BeginDate]",
                  "      ,[EndDate]",
                  "      ,[HomeroomIndicator]",
                  "      ,[LocalEducationAgencyId]",
                  "  FROM [bi].[EQ24.StudentSectionAssociation]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [StudentUSI]",
              "      ,[SchoolId]",
              "      ,[ClassPeriodName]",
              "      ,[ClassroomIdentificationCode]",
              "      ,[LocalCourseCode]",
              "      ,[UniqueSectionCode]",
              "      ,[SequenceOfCourse]",
              "      ,[SchoolYear]",
              "      ,[Term]",
              "      ,[BeginDate]",
              "      ,[EndDate]",
              "      ,[HomeroomIndicator]",
              "      ,[LocalEducationAgencyId]",
              "  FROM [bi].[EQ24.StudentSectionAssociation]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "EWS.StudentSectionAssociation"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [StudentUSI]",
              "      ,[SchoolId]",
              "      ,[ClassPeriodName]",
              "      ,[ClassroomIdentificationCode]",
              "      ,[LocalCourseCode]",
              "      ,[UniqueSectionCode]",
              "      ,[SequenceOfCourse]",
              "      ,[SchoolYear]",
              "      ,[Term]",
              "      ,[BeginDate]",
              "      ,[EndDate]",
              "      ,[HomeroomIndicator]",
              "      ,[LocalEducationAgencyId]",
              "  FROM [bi].[EQ24.StudentSectionAssociation]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "School",
        "columns": [
          {
            "name": "SchoolId",
            "dataType": "int64",
            "sourceColumn": "SchoolId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SchoolType",
            "dataType": "string",
            "sourceColumn": "SchoolType",
            "sourceProviderType": "WChar"
          },
          {
            "type": "calculated",
            "name": "School Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " LOOKUPVALUE(EducationOrganization[NameOfInstitution], EducationOrganization[EducationOrganizationId], School[SchoolId])"
          },
          {
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "LocalEducationAgencyId"
          }
        ],
        "partitions": [
          {
            "name": "School-",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [SchoolId]",
                "      ,[LocalEducationAgencyId]",
                "      --,[SchoolTypeId]",
                "      ,[SchoolType]",
                "FROM [bi].[EQ24.School]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [SchoolId]",
                  "      ,[LocalEducationAgencyId]",
                  "      --,[SchoolTypeId]",
                  "      ,[SchoolType]",
                  "FROM [bi].[EQ24.School]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [SchoolId]",
              "      ,[LocalEducationAgencyId]",
              "      --,[SchoolTypeId]",
              "      ,[SchoolType]",
              "FROM [bi].[EQ24.School]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "EWS.School"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [SchoolId]",
              "      ,[LocalEducationAgencyId]",
              "      --,[SchoolTypeId]",
              "      ,[SchoolType]",
              "FROM [bi].[EQ24.School]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StudentProgramAssociation",
        "isHidden": true,
        "columns": [
          {
            "name": "StudentUSI",
            "dataType": "int64",
            "sourceColumn": "StudentUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ProgramName",
            "dataType": "string",
            "sourceColumn": "ProgramName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "BeginDate",
            "dataType": "dateTime",
            "sourceColumn": "BeginDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          },
          {
            "name": "EndDate",
            "dataType": "dateTime",
            "sourceColumn": "EndDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          }
        ],
        "partitions": [
          {
            "name": "StudentProgramAssociation",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [StudentUSI]",
                "      ,[ProgramName]",
                "      ,[BeginDate]",
                "      ,[EndDate]",
                "FROM [bi].[eq24.StudentProgramAssociation]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [StudentUSI]",
                  "      ,[ProgramName]",
                  "      ,[BeginDate]",
                  "      ,[EndDate]",
                  "FROM [bi].[eq24.StudentProgramAssociation]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [StudentUSI]",
              "      ,[ProgramName]",
              "      ,[BeginDate]",
              "      ,[EndDate]",
              "FROM [bi].[eq24.StudentProgramAssociation]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "PMS.StudentProgramAssociation"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [StudentUSI]",
              "      ,[ProgramName]",
              "      ,[BeginDate]",
              "      ,[EndDate]",
              "FROM [bi].[eq24.StudentProgramAssociation]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Grade",
        "isHidden": true,
        "columns": [
          {
            "name": "StudentUSI",
            "dataType": "int64",
            "sourceColumn": "StudentUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "GradingPeriodBeginDate",
            "dataType": "dateTime",
            "sourceColumn": "GradingPeriodBeginDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          },
          {
            "name": "Term",
            "dataType": "string",
            "sourceColumn": "Term",
            "sourceProviderType": "WChar"
          },
          {
            "name": "GradingPeriod",
            "dataType": "string",
            "sourceColumn": "GradingPeriod",
            "sourceProviderType": "WChar"
          },
          {
            "name": "SchoolId",
            "dataType": "int64",
            "sourceColumn": "SchoolId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "LocalCourseCode",
            "dataType": "string",
            "sourceColumn": "LocalCourseCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "UniqueSectionCode",
            "dataType": "string",
            "sourceColumn": "UniqueSectionCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "GradeEarned",
            "dataType": "string",
            "sourceColumn": "GradeEarned",
            "sourceProviderType": "WChar"
          },
          {
            "name": "GradeType",
            "dataType": "string",
            "sourceColumn": "GradeType",
            "sourceProviderType": "WChar"
          },
          {
            "type": "calculated",
            "name": "SectionBeginDate",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": [
              " LOOKUPVALUE(StudentSectionAssociation[BeginDate],",
              "              StudentSectionAssociation[StudentUSI], Grade[StudentUSI],",
              "              StudentSectionAssociation[SchoolId], Grade[SchoolId],",
              "StudentSectionAssociation[ClassPeriodName], Grade[ClassPeriodName],",
              "StudentSectionAssociation[ClassroomIdentificationCode], Grade[ClassroomIdentificationCode],",
              "StudentSectionAssociation[LocalCourseCode], Grade[LocalCourseCode],",
              "StudentSectionAssociation[UniqueSectionCode], Grade[UniqueSectionCode],",
              "StudentSectionAssociation[SchoolYear], Grade[SchoolYear],",
              "StudentSectionAssociation[Term], Grade[Term],",
              "StudentSectionAssociation[SequenceOfCourse], Grade[SequenceOfCourse],",
              "StudentSectionAssociation[BeginDate], Grade[BeginDate]",
              ")"
            ],
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "SectionEndDate",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": [
              " LOOKUPVALUE(  StudentSectionAssociation[EndDate],",
              "                StudentSectionAssociation[StudentUSI], Grade[StudentUSI],",
              "                StudentSectionAssociation[SchoolId], Grade[SchoolId],",
              "                StudentSectionAssociation[ClassPeriodName], Grade[ClassPeriodName],",
              "                StudentSectionAssociation[ClassroomIdentificationCode], Grade[ClassroomIdentificationCode],",
              "                StudentSectionAssociation[LocalCourseCode], Grade[LocalCourseCode],",
              "                StudentSectionAssociation[UniqueSectionCode], Grade[UniqueSectionCode],",
              "                StudentSectionAssociation[SchoolYear], Grade[SchoolYear],",
              "                StudentSectionAssociation[Term], Grade[Term],",
              "                StudentSectionAssociation[SequenceOfCourse], Grade[SequenceOfCourse],",
              "                StudentSectionAssociation[BeginDate], Grade[BeginDate]",
              ")"
            ],
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "ClassPeriodName",
            "dataType": "string",
            "sourceColumn": "ClassPeriodName"
          },
          {
            "name": "BeginDate",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "BeginDate",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "ClassroomIdentificationCode",
            "dataType": "string",
            "sourceColumn": "ClassroomIdentificationCode"
          },
          {
            "name": "SequenceOfCourse",
            "dataType": "int64",
            "sourceColumn": "SequenceOfCourse"
          },
          {
            "type": "calculated",
            "name": "Subject",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "",
              "IF(MID([LocalCourseCode],11,4) IN {\"5010\"}, \"English Language Arts\",",
              "IF(MID([LocalCourseCode],11,4) IN {\"5012\"}, \"Mathematics\",",
              "IF(MID([LocalCourseCode],11,2) IN {\"10\"}, \"English Language Arts\",",
              "IF(MID([LocalCourseCode],11,2) IN {\"12\"}, \"Mathematics\"",
              ")",
              "",
              ")))"
            ]
          },
          {
            "type": "calculated",
            "name": "Grade *",
            "dataType": "double",
            "isDataTypeInferred": false,
            "isHidden": true,
            "expression": [
              "",
              "IF([GradeEarned] = \"A\", \"9500\",",
              "IF([GradeEarned] = \"B\", \"8500\",",
              "IF([GradeEarned] = \"C\", \"7500\",",
              "IF([GradeEarned] = \"D\", \"6500\",",
              "IF([GradeEarned] = \"F\", \"5500\",",
              "IF([GradeEarned] = \"I\", \"501\",",
              "IF([GradeEarned] = \"NG\", \"502\",",
              "IF([GradeEarned] = \"IP\", \"503\",",
              "IF([GradeEarned] = \"W\", \"504\",",
              "IF([GradeEarned] = \"WF\", \"505\",",
              "IF([GradeEarned] = \"WP\", \"506\",",
              "IF([GradeEarned] = \"AS\", \"600\",",
              "IF([GradeEarned] = \"E\", \"601\",",
              "IF([GradeEarned] = \"ES\", \"602\",",
              "IF([GradeEarned] = \"LP\", \"603\",",
              "IF([GradeEarned] = \"MS\", \"604\",",
              "IF([GradeEarned] = \"NM\", \"605\",",
              "IF([GradeEarned] = \"S\", \"606\",",
              "IF([GradeEarned] = \"S-\", \"607\",",
              "IF([GradeEarned] = \"U\", \"608\",",
              "IF([GradeEarned] = \"59*\", \"609\",",
              "IF([GradeEarned] = \"CW\", \"610\",",
              "IF([GradeEarned] = \"DEV\", \"611\",",
              "IF([GradeEarned] = \"EME\", \"612\",",
              "IF([GradeEarned] = \"EX\", \"613\",",
              "IF([GradeEarned] = \"EXE\", \"614\",",
              "IF([GradeEarned] = \"IEV\", \"615\",",
              "IF([GradeEarned] = \"N\", \"616\",",
              "IF([GradeEarned] = \"P\", \"617\",",
              "IF([GradeEarned] = \"PRO\", \"618\",",
              "IF([GradeEarned] = \"RG*\", \"619\",",
              "IF([GradeEarned] = \"S+\", \"620\",",
              "IF([GradeEarned] = \"T\", \"621\",",
              "IF(VALUE([GradeEarned]) = -59, \"622\",",
              "IF([GradeEarned] = \"AP\", \"623\",",
              "[GradeEarned]",
              ")))))))))))))))))))))))))))))))))))"
            ]
          },
          {
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyId"
          }
        ],
        "partitions": [
          {
            "name": "uniformGrade",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [StudentUSI]",
                "      ,[GradingPeriodBeginDate]",
                "      ,[Term]",
                "      ,[GradingPeriod]",
                "      ,[SchoolId]",
                "      ,[ClassPeriodName]",
                "      ,[SchoolYear]",
                "      ,[LocalCourseCode]",
                "      ,[UniqueSectionCode]",
                "      ,[BeginDate]",
                "      ,[ClassroomIdentificationCode]",
                "      ,[SequenceOfCourse]",
                "      ,[GradeEarned]",
                "      ,[GradeType]",
                "      ,[LocalEducationAgencyId]",
                "FROM [bi].[eq24.Grade]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [StudentUSI]",
                  "      ,[GradingPeriodBeginDate]",
                  "      ,[Term]",
                  "      ,[GradingPeriod]",
                  "      ,[SchoolId]",
                  "      ,[ClassPeriodName]",
                  "      ,[SchoolYear]",
                  "      ,[LocalCourseCode]",
                  "      ,[UniqueSectionCode]",
                  "      ,[BeginDate]",
                  "      ,[ClassroomIdentificationCode]",
                  "      ,[SequenceOfCourse]",
                  "      ,[GradeEarned]",
                  "      ,[GradeType]",
                  "      ,[LocalEducationAgencyId]",
                  "FROM [bi].[eq24.Grade]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [StudentUSI]",
              "      ,[GradingPeriodBeginDate]",
              "      ,[Term]",
              "      ,[GradingPeriod]",
              "      ,[SchoolId]",
              "      ,[ClassPeriodName]",
              "      ,[SchoolYear]",
              "      ,[LocalCourseCode]",
              "      ,[UniqueSectionCode]",
              "      ,[BeginDate]",
              "      ,[ClassroomIdentificationCode]",
              "      ,[SequenceOfCourse]",
              "      ,[GradeEarned]",
              "      ,[GradeType]",
              "      ,[LocalEducationAgencyId]",
              "FROM [bi].[eq24.Grade]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.Grade"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [StudentUSI]",
              "      ,[GradingPeriodBeginDate]",
              "      ,[Term]",
              "      ,[GradingPeriod]",
              "      ,[SchoolId]",
              "      ,[ClassPeriodName]",
              "      ,[SchoolYear]",
              "      ,[LocalCourseCode]",
              "      ,[UniqueSectionCode]",
              "      ,[BeginDate]",
              "      ,[ClassroomIdentificationCode]",
              "      ,[SequenceOfCourse]",
              "      ,[GradeEarned]",
              "      ,[GradeType]",
              "      ,[LocalEducationAgencyId]",
              "FROM [bi].[eq24.Grade]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StudentCourseCurrent",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "SectionBeginDate",
            "dataType": "dateTime",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[SectionBeginDate]",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Subject",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "",
              "IF(MID([LocalCourseCode],11,4) IN {\"5010\"}, \"English Language Arts\",",
              "IF(MID([LocalCourseCode],11,4) IN {\"5012\"}, \"Mathematics\",",
              "IF(MID([LocalCourseCode],11,2) IN {\"10\"}, \"English Language Arts\",",
              "IF(MID([LocalCourseCode],11,2) IN {\"12\"}, \"Mathematics\"",
              ")",
              "",
              ")))"
            ]
          },
          {
            "type": "calculated",
            "name": "T1",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE(Grade[Grade *], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[Term],StudentCourseCurrent[Term],",
              "                            Grade[GradeType],\"Grading Period\",",
              "                            Grade[GradingPeriod], \"First Nine Weeks\",",
              "                            Grade[Subject],StudentCourseCurrent[Subject]",
              "           )"
            ]
          },
          {
            "type": "calculated",
            "name": "T2",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE(Grade[Grade *], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[Term],StudentCourseCurrent[Term],",
              "                            Grade[GradeType],\"Grading Period\",",
              "                            Grade[GradingPeriod], \"Second Nine Weeks\"",
              "           )"
            ]
          },
          {
            "type": "calculated",
            "name": "S1",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE(Grade[Grade *], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[Term],StudentCourseCurrent[Term],",
              "                            Grade[GradeType],\"Semester\",",
              "                            Grade[GradingPeriod], \"First Semester\"",
              "           )"
            ]
          },
          {
            "type": "calculated",
            "name": "T3",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE(Grade[Grade *], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[Term],StudentCourseCurrent[Term],",
              "                            Grade[GradeType],\"Grading Period\",",
              "                            Grade[GradingPeriod], \"Third Nine Weeks\"",
              "           )"
            ]
          },
          {
            "type": "calculated",
            "name": "T4",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE(Grade[Grade *], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[Term],StudentCourseCurrent[Term],",
              "                            Grade[GradeType],\"Grading Period\",",
              "                            Grade[GradingPeriod], \"Fourth Nine Weeks\"",
              "           )"
            ]
          },
          {
            "type": "calculated",
            "name": "S2",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE(Grade[Grade *], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[Term],StudentCourseCurrent[Term],",
              "                            Grade[GradeType],\"Semester\",",
              "                            Grade[GradingPeriod], \"Second Semester\"",
              "           )"
            ]
          },
          {
            "type": "calculated",
            "name": "FIN *",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "",
              "",
              "var CountValue = (4 - ISBLANK([T1]) - ISBLANK([T2])- ISBLANK([T3])- ISBLANK([T4]))",
              "",
              "var CountValueSemester = (2 - ISBLANK([S1]) - ISBLANK([S2]))",
              "",
              "return",
              "IF(LOOKUPVALUE(Grade[Grade *], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[GradingPeriod], \"End of Year\"",
              "              ) = BLANK(),",
              "",
              "            IF(CountValue = 0 && CountValueSemester = 0, BLANK(),",
              "            IF(CountValue = 0, ROUND((VALUE([S1]) + VALUE([S2]))/CountValueSemester,2),",
              "            IF(    VALUE([T1]) = 501 ",
              "                || VALUE([T2]) = 501 ",
              "                || VALUE([T3]) = 501 ",
              "                || VALUE([T4]) = 501 ",
              "                || VALUE([S1]) = 501 ",
              "                || VALUE([S2]) = 501 , 501,",
              "            IF(    VALUE([T1]) = 502 ",
              "                || VALUE([T2]) = 502 ",
              "                || VALUE([T3]) = 502 ",
              "                || VALUE([T4]) = 502                                          ",
              "                || VALUE([S1]) = 502 ",
              "                || VALUE([S2]) = 502 , 501,",
              "",
              "             ROUND((VALUE([T1]) + VALUE([T2]) + VALUE([T3]) + VALUE([T4]))/CountValue, 2)",
              "",
              "            ))))",
              ",LOOKUPVALUE(Grade[Grade *], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[GradingPeriod], \"End of Year\"",
              "           )",
              "  )"
            ]
          },
          {
            "type": "calculated",
            "name": "FIN",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "",
              "IF([FIN *] = 9500,\"A\",",
              "IF([FIN *] = 8500,\"B\",",
              "IF([FIN *] = 7500,\"C\",",
              "IF([FIN *] = 6500,\"D\",",
              "IF([FIN *] = 5500,\"F\",",
              "IF([FIN *] = 501,\"I\",",
              "IF([FIN *] = 502,\"NG\",",
              "IF([FIN *] = 503, \"IP\",",
              "IF([FIN *] = 504, \"W\",",
              "IF([FIN *] = 505, \"WF\",",
              "IF([FIN *] = 506, \"WP\",",
              "IF([FIN *] = 600, \"AS\",",
              "IF([FIN *] = 601,\"E\", ",
              "IF([FIN *] = 602, \"ES\", ",
              "IF([FIN *] = 603, \"LP\",",
              "IF([FIN *] = 604, \"MS\",",
              "IF([FIN *] = 605, \"NM\",",
              "IF([FIN *] = 606, \"S\",",
              "IF([FIN *] = 607, \"S-\",",
              "IF([FIN *] = 608, \"U\",",
              "",
              "FORMAT([FIN *],\"General number\"",
              ")))))))))))))))))))))"
            ]
          },
          {
            "type": "calculated",
            "name": "SectionEndDate",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "",
              "/*",
              "LOOKUPVALUE(Grade[SectionEndDate],",
              "            Grade[StudentUSI],StudentCourseCurrent[StudentUSI],",
              "            Grade[SchoolYear],StudentCourseCurrent[SchoolYear],",
              "Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "Grade[Term],StudentCourseCurrent[Term],",
              "Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "Grade[UniqueSectionCode], StudentCourseCurrent[UniqueSectionCode],",
              "Grade[LocalEducationAgencyId],StudentCourseCurrent[LocalEducationAgencyId])",
              "*/"
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "StudentUSI",
            "dataType": "int64",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "Grade[StudentUSI]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "SchoolYear",
            "dataType": "int64",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "Grade[SchoolYear]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "LocalCourseCode",
            "dataType": "string",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "Grade[LocalCourseCode]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Term",
            "dataType": "string",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "Grade[Term]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "Grade[LocalEducationAgencyId]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "UniqueSectionCode",
            "dataType": "string",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "Grade[UniqueSectionCode]"
          },
          {
            "type": "calculated",
            "name": "Term1",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE(Grade[GradeEarned], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[Term],StudentCourseCurrent[Term],",
              "                            Grade[GradeType],\"Grading Period\",",
              "                            Grade[GradingPeriod], \"First Nine Weeks\",",
              "                            Grade[Subject],StudentCourseCurrent[Subject]",
              "           )"
            ]
          },
          {
            "type": "calculated",
            "name": "Term2",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE(Grade[GradeEarned], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[Term],StudentCourseCurrent[Term],",
              "                            Grade[GradeType],\"Grading Period\",",
              "                            Grade[GradingPeriod], \"Second Nine Weeks\"",
              "           )"
            ]
          },
          {
            "type": "calculated",
            "name": "Sem1",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE(Grade[GradeEarned], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[Term],StudentCourseCurrent[Term],",
              "                            Grade[GradeType],\"Semester\",",
              "                            Grade[GradingPeriod], \"First Semester\"",
              "           )"
            ]
          },
          {
            "type": "calculated",
            "name": "Term3",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE(Grade[GradeEarned], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[Term],StudentCourseCurrent[Term],",
              "                            Grade[GradeType],\"Grading Period\",",
              "                            Grade[GradingPeriod], \"Third Nine Weeks\"",
              "           )"
            ]
          },
          {
            "type": "calculated",
            "name": "Term4",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE(Grade[GradeEarned], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[Term],StudentCourseCurrent[Term],",
              "                            Grade[GradeType],\"Grading Period\",",
              "                            Grade[GradingPeriod], \"Fourth Nine Weeks\"",
              "           )"
            ]
          },
          {
            "type": "calculated",
            "name": "Sem2",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE(Grade[GradeEarned], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[Term],StudentCourseCurrent[Term],",
              "                            Grade[GradeType],\"Semester\",",
              "                            Grade[GradingPeriod], \"Second Semester\"",
              "           )"
            ]
          },
          {
            "type": "calculated",
            "name": "FINAL",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE(Grade[GradeEarned], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[Term],StudentCourseCurrent[Term],",
              "                            Grade[GradeType],\"Final\",",
              "                            Grade[GradingPeriod], \"End of Year\"",
              "           )"
            ]
          },
          {
            "type": "calculated",
            "name": "Grade \"F\" Numeric",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "",
              "var CountValue = (4 - ISBLANK([T1]) - ISBLANK([T2])- ISBLANK([T3])- ISBLANK([T4]))",
              "",
              "var CountValueSemester = (2 - ISBLANK([S1]) - ISBLANK([S2]))",
              "",
              "return",
              "IF(LOOKUPVALUE(Grade[Grade *], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[GradingPeriod], \"End of Year\"",
              "              ) = BLANK(),",
              "",
              "            IF(CountValue = 0 && CountValueSemester = 0, BLANK(),",
              "            IF(CountValueSemester > 0 && VALUE([S1]) <= 100 && VALUE([S2]) <= 100, ROUND((VALUE([S1]) + VALUE([S2]))/CountValueSemester,2),",
              "            IF((VALUE([S1]) IN {501,5500,505,608,605,502,609,615,622} || VALUE([S2]) IN {501,5500,505,608,605,502,609,615,622}) && CountValueSemester > 0, 55,",
              "            IF([S1] = BLANK() && [S2] = BLANK() && ([T1] IN {501,5500,505,608,605,502,609,615,622} ",
              "                                                 || [T2] IN {501,5500,505,608,605,502,609,615,622}",
              "                                                 || [T3] IN {501,5500,505,608,605,502,609,615,622}",
              "                                                 || [T4] IN {501,5500,505,608,605,502,609,615,622}",
              "                                                   ),55,",
              "               ROUND((VALUE([T1]) + VALUE([T2]) + VALUE([T3]) + VALUE([T4]))/CountValue, 2)",
              "             ",
              "",
              "            ))))",
              ",LOOKUPVALUE(Grade[Grade *], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[GradingPeriod], \"End of Year\"",
              "           )",
              "  )"
            ]
          },
          {
            "type": "calculated",
            "name": "Grade \"F\"",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "",
              "IF([FINAL] <> BLANK(),[FINAL],",
              "IF([Sem2] <> BLANK() && [Sem1] = BLANK() && [Term1] = BLANK() && [Term2] = BLANK(), [Sem2],",
              "IF([Sem1] <> BLANK() && [Sem2] = BLANK() && [Term3] = BLANK() && [Term4] = BLANK(), [Sem1],",
              "IF([Sem2] = BLANK() && [Sem1] = BLANK(), IF(    [Term1] in {\"F\",\"WF\",\"U\",\"NM\",\"I\",\"NG\",\"59*\",\"IEV\"}",
              "                                             || [Term2] in {\"F\",\"WF\",\"U\",\"NM\",\"I\",\"NG\",\"59*\",\"IEV\"}",
              "                                             || [Term3] in {\"F\",\"WF\",\"U\",\"NM\",\"I\",\"NG\",\"59*\",\"IEV\"}",
              "                                             || [Term4] in {\"F\",\"WF\",\"U\",\"NM\",\"I\",\"NG\",\"59*\",\"IEV\"}, \"F\",BLANK()),",
              "IF([Sem1] <> BLANK() || [Sem2] <> BLANK(), IF([Sem1] in {\"F\",\"WF\",\"U\",\"NM\",\"I\",\"NG\",\"59*\",\"IEV\"}",
              "                                                || [Sem2] in {\"F\",\"WF\",\"U\",\"NM\",\"I\",\"NG\",\"59*\",\"IEV\"}, \"F\", BLANK()),",
              "",
              "BLANK()",
              ")))))"
            ]
          },
          {
            "type": "calculated",
            "name": "Flag Fail ELA/Math",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF([Grade \"F\"] IN {\"F\",\"WF\",\"U\",\"NM\",\"NG\",\"I\",\"59*\",\"IEV\"} || [Grade \"F\" Numeric] IN {55,5500,505,608,605,502,501} || ([Grade \"F\" Numeric] < 60 && [FINAL] <> BLANK()), \"yes\",",
              "    BLANK()",
              ")",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "StudentSectionKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "         [StudentUSI]",
              " & \"^\" & [LocalCourseCode]",
              " & \"^\" & [Term]",
              " & \"^\" & [UniqueSectionCode]",
              " & \"^\" & [SectionBeginDate]",
              " & \"^\" & [SchoolYear]"
            ]
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "GROUPBY(Grade",
                ",Grade[StudentUSI]",
                ",Grade[SchoolYear]",
                ",Grade[LocalCourseCode]",
                ",Grade[UniqueSectionCode]",
                ",Grade[Term]",
                ",Grade[LocalEducationAgencyId]",
                ",\"SectionBeginDate\", MAXX(CURRENTGROUP(),Grade[SectionBeginDate])",
                ")",
                ""
              ]
            }
          }
        ]
      },
      {
        "name": "StudentAssessmentPerformanceLevel",
        "isHidden": true,
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentUSI",
            "dataType": "int64",
            "sourceColumn": "StudentUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "AdministrationDate",
            "dataType": "dateTime",
            "sourceColumn": "AdministrationDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBTimeStamp",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "GradeLevel",
            "dataType": "string",
            "sourceColumn": "GradeLevel",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AcademicSubject",
            "dataType": "string",
            "sourceColumn": "AcademicSubject",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AssessmentReportingMethodTypeId",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "AssessmentReportingMethodTypeId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "AssessmentTitle",
            "dataType": "string",
            "sourceColumn": "AssessmentTitle",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Result",
            "dataType": "string",
            "sourceColumn": "Result",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Version",
            "dataType": "int64",
            "sourceColumn": "Version",
            "sourceProviderType": "Integer"
          },
          {
            "type": "calculated",
            "name": "StudentAssessmentKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "CONCATENATE(",
              " ",
              "IF(CONTAINSSTRING([StudentAssessmentIdentifier],\"_SS_\") = TRUE(),LEFT([StudentAssessmentIdentifier],SEARCH(\"_SS_\", [StudentAssessmentIdentifier],1,50)),",
              "IF(CONTAINSSTRING([StudentAssessmentIdentifier],\"_AL_\") = TRUE(),LEFT([StudentAssessmentIdentifier],SEARCH(\"_AL_\", [StudentAssessmentIdentifier],1,50)),",
              "CONCATENATE(LEFT([StudentAssessmentIdentifier],LEN([StudentAssessmentIdentifier])-11),\"_\")",
              ")),",
              "",
              "RIGHT([StudentAssessmentIdentifier],10)",
              ")",
              ""
            ]
          }
        ],
        "partitions": [
          {
            "name": "StudentAssessmentPerformanceLevel",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [AssessmentIdentifier]",
                "      ,[StudentAssessmentIdentifier]",
                "      ,[StudentUSI]",
                "      ,[AdministrationDate]",
                "      ,[GradeLevel]",
                "      ,[AcademicSubject]",
                "      ,[AssessmentReportingMethodTypeId]",
                "      ,[AssessmentTitle]",
                "      ,[Result]",
                "      ,[Version]",
                "  FROM [bi].[eq24.StudentAssessmentPerformanceLevel]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [AssessmentIdentifier]",
                  "      ,[StudentAssessmentIdentifier]",
                  "      ,[StudentUSI]",
                  "      ,[AdministrationDate]",
                  "      ,[GradeLevel]",
                  "      ,[AcademicSubject]",
                  "      ,[AssessmentReportingMethodTypeId]",
                  "      ,[AssessmentTitle]",
                  "      ,[Result]",
                  "      ,[Version]",
                  "  FROM [bi].[eq24.StudentAssessmentPerformanceLevel]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [AssessmentIdentifier]",
              "      ,[StudentAssessmentIdentifier]",
              "      ,[StudentUSI]",
              "      ,[AdministrationDate]",
              "      ,[GradeLevel]",
              "      ,[AcademicSubject]",
              "      ,[AssessmentReportingMethodTypeId]",
              "      ,[AssessmentTitle]",
              "      ,[Result]",
              "      ,[Version]",
              "  FROM [bi].[eq24.StudentAssessmentPerformanceLevel]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.StudentAssessmentPerformanceLevel"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [AssessmentIdentifier]",
              "      ,[StudentAssessmentIdentifier]",
              "      ,[StudentUSI]",
              "      ,[AdministrationDate]",
              "      ,[GradeLevel]",
              "      ,[AcademicSubject]",
              "      ,[AssessmentReportingMethodTypeId]",
              "      ,[AssessmentTitle]",
              "      ,[Result]",
              "      ,[Version]",
              "  FROM [bi].[eq24.StudentAssessmentPerformanceLevel]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StudentAssessmentScoreResult",
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentUSI",
            "dataType": "int64",
            "sourceColumn": "StudentUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "AdministrationDate",
            "dataType": "dateTime",
            "sourceColumn": "AdministrationDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBTimeStamp",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "GradeLevel",
            "dataType": "int64",
            "sourceColumn": "GradeLevel",
            "formatString": "0",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AcademicSubject",
            "dataType": "string",
            "sourceColumn": "AcademicSubject",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AssessmentReportingMethodTypeId",
            "dataType": "int64",
            "sourceColumn": "AssessmentReportingMethodTypeId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "AssessmentTitle",
            "dataType": "string",
            "sourceColumn": "AssessmentTitle",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Result",
            "dataType": "int64",
            "sourceColumn": "Result",
            "formatString": "0",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Version",
            "dataType": "int64",
            "sourceColumn": "Version",
            "sourceProviderType": "Integer"
          },
          {
            "type": "calculated",
            "name": "AchievementLevel",
            "dataType": "int64",
            "isDataTypeInferred": false,
            "expression": [
              "",
              "LOOKUPVALUE(StudentAssessmentPerformanceLevel[Result],",
              "StudentAssessmentPerformanceLevel[StudentAssessmentIdentifier],StudentAssessmentScoreResult[StudentAssessmentIdentifier],",
              "StudentAssessmentPerformanceLevel[AcademicSubject],StudentAssessmentScoreResult[AcademicSubject],",
              "StudentAssessmentPerformanceLevel[StudentUSI],StudentAssessmentScoreResult[StudentUSI]",
              "",
              "           )"
            ]
          },
          {
            "type": "calculated",
            "name": "Learning Gain Level",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "",
              "",
              "var FilteredTable_LearningGains = FILTER(FSA_LearningGains,",
              "                      VALUE(StudentAssessmentScoreResult[Result]) >= VALUE(FSA_LearningGains[Min])",
              "                      && VALUE(StudentAssessmentScoreResult[Result]) <= VALUE(FSA_LearningGains[Max])",
              "                      && VALUE(StudentAssessmentScoreResult[GradeLevel]) = VALUE(FSA_LearningGains[GradeLevel])",
              "                      && StudentAssessmentScoreResult[AssessmentTitle] = FSA_LearningGains[AssessmentTitle]",
              "                      && FSA_LearningGains[LearningGainLevel] <> BLANK())",
              "",
              "var FilteredTable_LearningGainsAlgebraGeometry = FILTER(FSA_LearningGains,",
              "                      VALUE(StudentAssessmentScoreResult[Result]) >= VALUE(FSA_LearningGains[Min])",
              "                      && VALUE(StudentAssessmentScoreResult[Result]) <= VALUE(FSA_LearningGains[Max])",
              "                      && StudentAssessmentScoreResult[AssessmentTitle] = FSA_LearningGains[AssessmentTitle]",
              "                      && FSA_LearningGains[LearningGainLevel] <> BLANK())",
              "",
              "var LearningGain = MAXX(FilteredTable_LearningGains,FSA_LearningGains[LearningGainLevel])",
              "",
              "var LearningGainAlgebraGeometry = MAXX(FilteredTable_LearningGainsAlgebraGeometry,FSA_LearningGains[LearningGainLevel])",
              "",
              "",
              "return ",
              "IF(CONTAINSSTRING(StudentAssessmentScoreResult[AssessmentTitle],\"Algebra\") = TRUE() || CONTAINSSTRING(StudentAssessmentScoreResult[AssessmentTitle],\"Geometry\") = TRUE(),",
              "LearningGainAlgebraGeometry,",
              "LearningGain)"
            ]
          },
          {
            "type": "calculated",
            "name": "Quartile",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF(VALUE([Result]) <= PERCENTILEX.INC(StudentAssessmentScoreResult,VALUE([Result]),0.25), 1,",
              "IF(VALUE([Result]) > PERCENTILEX.INC(StudentAssessmentScoreResult,VALUE([Result]),0.25) && VALUE([Result]) <= PERCENTILEX.INC(StudentAssessmentScoreResult,VALUE([Result]),0.50) , 2,",
              "IF(VALUE([Result]) > PERCENTILEX.INC(StudentAssessmentScoreResult,VALUE([Result]),0.50) && VALUE([Result]) <= PERCENTILEX.INC(StudentAssessmentScoreResult,VALUE([Result]),0.75) , 3,",
              "IF(VALUE([Result]) > PERCENTILEX.INC(StudentAssessmentScoreResult,VALUE([Result]),0.75), 4,",
              "BLANK()",
              "))))"
            ]
          },
          {
            "type": "calculated",
            "name": "StateAssessmentTitle",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "",
              "IF([AssessmentTitle] IN {\"FSA Mathematics\",\"FSA Algebra I\",\"FSA Algebra II\",\"FSA Geometry\",\"FA1 Algebra 1\",\"FA1 Mathematics\",\"FA1 Geometry\"} && [AcademicSubject] IN {\"Mathematics\"}, \"State Assessment Math\",",
              "IF([AssessmentTitle] IN {\"FSA ELA Reading\",\"FA1 ELA\"} && [AcademicSubject] IN {\"Reading\",\"English Language Arts\"}, \"State Assessment ELA\",",
              "IF([AssessmentTitle] IN {\"FC2\",\"State Assessment\",\"EB1\",\"EOC Biology 1\"} && [AcademicSubject] IN {\"Science\"}, \"State Assessment Science\",",
              "IF([AssessmentTitle] IN {\"EAH\",\"ECS\",\"EOC Civics\",\"EOC US History\"} && [AcademicSubject] IN {\"Social Studies\",\"Social Sciences and History\"}, \"State Assessment Social Studies\",",
              "BLANK()",
              "))))"
            ]
          },
          {
            "type": "calculated",
            "name": "LearningGainLevel",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF(CONTAINSSTRING(StudentAssessmentScoreResult[AssessmentTitle],\"Algebra\") = TRUE() || CONTAINSSTRING(StudentAssessmentScoreResult[AssessmentTitle],\"Geometry\") = TRUE(),  ",
              "     CALCULATE(VALUES(FSA_LearningGains[LearningGainLevel]),FILTER(FSA_LearningGains,VALUE(StudentAssessmentScoreResult[Result]) >= VALUE(FSA_LearningGains[Min])",
              "                                                                                  && VALUE(StudentAssessmentScoreResult[Result]) <= VALUE(FSA_LearningGains[Max])",
              "                                                                                  && FSA_LearningGains[LearningGainLevel] <> BLANK()",
              "                                                                                  && StudentAssessmentScoreResult[AssessmentTitle] = FSA_LearningGains[AssessmentTitle]",
              "                                                                 )",
              "              ),",
              "    CALCULATE(VALUES(FSA_LearningGains[LearningGainLevel]),FILTER(FSA_LearningGains,VALUE(StudentAssessmentScoreResult[Result]) >= VALUE(FSA_LearningGains[Min])",
              "                                                                                  && VALUE(StudentAssessmentScoreResult[Result]) <= VALUE(FSA_LearningGains[Max])",
              "                                                                                  && FSA_LearningGains[LearningGainLevel] <> BLANK()",
              "                                                                                  && StudentAssessmentScoreResult[AssessmentTitle] = FSA_LearningGains[AssessmentTitle]",
              "                                                                                  && VALUE(StudentAssessmentScoreResult[GradeLevel]) = VALUE(FSA_LearningGains[GradeLevel])",
              "                                                                )",
              "             )",
              "",
              ")",
              "",
              "",
              "",
              "",
              "",
              "                    "
            ]
          },
          {
            "type": "calculated",
            "name": "ObjectiveAssessmentKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "",
              "         [StudentUSI]",
              " & \"^\" & [StudentAssessmentIdentifier]"
            ]
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Namespace"
          },
          {
            "type": "calculated",
            "name": "Level Min at 0%",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "",
              "IF([AchievementLevel] <> BLANK(),",
              "",
              "        IF(CONTAINSSTRING(StudentAssessmentScoreResult[AssessmentTitle],\"Algebra\") = TRUE() || CONTAINSSTRING(StudentAssessmentScoreResult[AssessmentTitle],\"Geometry\") = TRUE(),",
              "        LOOKUPVALUE(FSA_LearningGains[Min],FSA_LearningGains[AssessmentTitle],StudentAssessmentScoreResult[AssessmentTitle],",
              "                                               FSA_LearningGains[SubLevel],\"Overall\",",
              "                                               FSA_LearningGains[ScoreLevel],StudentAssessmentScoreResult[AchievementLevel]),",
              "",
              "        LOOKUPVALUE(FSA_LearningGains[Min],FSA_LearningGains[AssessmentTitle],StudentAssessmentScoreResult[AssessmentTitle],",
              "                                              FSA_LearningGains[GradeLevel],StudentAssessmentScoreResult[GradeLevel],",
              "                                               FSA_LearningGains[SubLevel],\"Overall\",",
              "                                               FSA_LearningGains[ScoreLevel],StudentAssessmentScoreResult[AchievementLevel])",
              "        ),",
              "BLANK()",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Level Max at 100%",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "",
              "IF([AchievementLevel] <> BLANK(),",
              "",
              "        IF(CONTAINSSTRING(StudentAssessmentScoreResult[AssessmentTitle],\"Algebra\") = TRUE() || CONTAINSSTRING(StudentAssessmentScoreResult[AssessmentTitle],\"Geometry\") = TRUE(),",
              "        LOOKUPVALUE(FSA_LearningGains[Max],FSA_LearningGains[AssessmentTitle],StudentAssessmentScoreResult[AssessmentTitle],",
              "                                               FSA_LearningGains[SubLevel],\"Overall\",",
              "                                               FSA_LearningGains[ScoreLevel],StudentAssessmentScoreResult[AchievementLevel]) + 1,",
              "",
              "        LOOKUPVALUE(FSA_LearningGains[Max],FSA_LearningGains[AssessmentTitle],StudentAssessmentScoreResult[AssessmentTitle],",
              "                                              FSA_LearningGains[GradeLevel],StudentAssessmentScoreResult[GradeLevel],",
              "                                               FSA_LearningGains[SubLevel],\"Overall\",",
              "                                               FSA_LearningGains[ScoreLevel],StudentAssessmentScoreResult[AchievementLevel]) + 1",
              "        ),",
              "BLANK()",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Achievement Level %",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "",
              "var LevelMin =  IF(CONTAINSSTRING(StudentAssessmentScoreResult[AssessmentTitle],\"Algebra\") = TRUE() || CONTAINSSTRING(StudentAssessmentScoreResult[AssessmentTitle],\"Geometry\") = TRUE(),",
              "                LOOKUPVALUE(FSA_LearningGains[Min],FSA_LearningGains[AssessmentTitle],StudentAssessmentScoreResult[AssessmentTitle],",
              "                                       FSA_LearningGains[SubLevel],\"Overall\",",
              "                                       FSA_LearningGains[ScoreLevel],StudentAssessmentScoreResult[AchievementLevel]),",
              "",
              "                LOOKUPVALUE(FSA_LearningGains[Min],FSA_LearningGains[AssessmentTitle],StudentAssessmentScoreResult[AssessmentTitle],",
              "                                      FSA_LearningGains[GradeLevel],StudentAssessmentScoreResult[GradeLevel],",
              "                                       FSA_LearningGains[SubLevel],\"Overall\",",
              "                                       FSA_LearningGains[ScoreLevel],StudentAssessmentScoreResult[AchievementLevel])",
              "                )",
              "",
              "var LevelMax =  IF(CONTAINSSTRING(StudentAssessmentScoreResult[AssessmentTitle],\"Algebra\") = TRUE() || CONTAINSSTRING(StudentAssessmentScoreResult[AssessmentTitle],\"Geometry\") = TRUE(),",
              "                LOOKUPVALUE(FSA_LearningGains[Max],FSA_LearningGains[AssessmentTitle],StudentAssessmentScoreResult[AssessmentTitle],",
              "                                       FSA_LearningGains[SubLevel],\"Overall\",",
              "                                       FSA_LearningGains[ScoreLevel],StudentAssessmentScoreResult[AchievementLevel]) + 1,",
              "",
              "                LOOKUPVALUE(FSA_LearningGains[Max],FSA_LearningGains[AssessmentTitle],StudentAssessmentScoreResult[AssessmentTitle],",
              "                                      FSA_LearningGains[GradeLevel],StudentAssessmentScoreResult[GradeLevel],",
              "                                       FSA_LearningGains[SubLevel],\"Overall\",",
              "                                       FSA_LearningGains[ScoreLevel],StudentAssessmentScoreResult[AchievementLevel]) + 1",
              "                )",
              "var point_100_percent = LevelMax - LevelMin",
              "",
              "var point_Result = [Result] - LevelMin",
              "",
              "return ",
              "IF([Level Min at 0%] <> BLANK(),",
              "   [AchievementLevel] + point_Result/point_100_percent,",
              "   BLANK()",
              "  )"
            ],
            "formatString": "0.00"
          },
          {
            "type": "calculated",
            "name": "SchoolYear",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "",
              "IF(MONTH(([AdministrationDate])) < 8, YEAR([AdministrationDate]), ",
              "IF(MONTH([AdministrationDate]) = 8 && DAY([AdministrationDate]) < 11, YEAR([AdministrationDate]),",
              "",
              "",
              "YEAR([AdministrationDate]) + 1",
              "))"
            ]
          },
          {
            "type": "calculated",
            "name": "KeyStudentAssessment",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "",
              "[AcademicSubject] & \"^\" & ",
              "[AssessmentIdentifier] & \"^\" & ",
              "[AssessmentReportingMethodTypeId] & \"^\" & ",
              "[StudentUSI] & \"^\" & ",
              "[AdministrationDate] & \"^\" & ",
              "[Namespace]"
            ]
          },
          {
            "type": "calculated",
            "name": "Current School ID",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "RELATED(Student[Current School ID])"
          },
          {
            "type": "calculated",
            "name": "LearningGainLevelString",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "",
              "IF([LearningGainLevel] = 5 , \"Level 5\",",
              "IF([LearningGainLevel] = 4 , \"Level 4\",",
              "IF([LearningGainLevel] = 3 , \"Level 3\",",
              "IF([LearningGainLevel] = 3.1 , \"Level 3 Low\",",
              "IF([LearningGainLevel] = 3.3 , \"Level 3 High\",",
              "IF([LearningGainLevel] = 2.1 , \"Level 2 Low\",",
              "IF([LearningGainLevel] = 2.3 , \"Level 2 High\",",
              "IF([LearningGainLevel] = 1.1 , \"Level 1 Low\",",
              "IF([LearningGainLevel] = 1.2 , \"Level 1 Mid\",",
              "IF([LearningGainLevel] = 1.3 , \"Level 1 High\"",
              "",
              "))))))))))"
            ]
          }
        ],
        "partitions": [
          {
            "name": "StudentAssessmentScoreResult",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [AssessmentIdentifier]",
                "      ,[StudentAssessmentIdentifier]",
                "      ,[StudentUSI]",
                "      ,[AdministrationDate]",
                "      ,[GradeLevel]",
                "      ,[AcademicSubject]",
                "      ,[AssessmentReportingMethodTypeId]",
                "      ,[AssessmentTitle]",
                "      ,[Result]",
                "      ,[Version]",
                "      ,[Namespace]",
                "FROM [bi].[eq24.StudentAssessmentScoreResult]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [AssessmentIdentifier]",
                  "      ,[StudentAssessmentIdentifier]",
                  "      ,[StudentUSI]",
                  "      ,[AdministrationDate]",
                  "      ,[GradeLevel]",
                  "      ,[AcademicSubject]",
                  "      ,[AssessmentReportingMethodTypeId]",
                  "      ,[AssessmentTitle]",
                  "      ,[Result]",
                  "      ,[Version]",
                  "      ,[Namespace]",
                  "FROM [bi].[eq24.StudentAssessmentScoreResult]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [AssessmentIdentifier]",
              "      ,[StudentAssessmentIdentifier]",
              "      ,[StudentUSI]",
              "      ,[AdministrationDate]",
              "      ,[GradeLevel]",
              "      ,[AcademicSubject]",
              "      ,[AssessmentReportingMethodTypeId]",
              "      ,[AssessmentTitle]",
              "      ,[Result]",
              "      ,[Version]",
              "      ,[Namespace]",
              "FROM [bi].[eq24.StudentAssessmentScoreResult]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.StudentAssessmentScoreResult"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [AssessmentIdentifier]",
              "      ,[StudentAssessmentIdentifier]",
              "      ,[StudentUSI]",
              "      ,[AdministrationDate]",
              "      ,[GradeLevel]",
              "      ,[AcademicSubject]",
              "      ,[AssessmentReportingMethodTypeId]",
              "      ,[AssessmentTitle]",
              "      ,[Result]",
              "      ,[Version]",
              "      ,[Namespace]",
              "FROM [bi].[eq24.StudentAssessmentScoreResult]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StaffSectionAssociation",
        "columns": [
          {
            "name": "ClassroomIdentificationCode",
            "dataType": "string",
            "sourceColumn": "ClassroomIdentificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "SchoolId",
            "dataType": "int64",
            "sourceColumn": "SchoolId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ClassPeriodName",
            "dataType": "string",
            "sourceColumn": "ClassPeriodName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LocalCourseCode",
            "dataType": "string",
            "sourceColumn": "LocalCourseCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "Term",
            "dataType": "string",
            "sourceColumn": "Term",
            "sourceProviderType": "WChar"
          },
          {
            "name": "UniqueSectionCode",
            "dataType": "string",
            "sourceColumn": "UniqueSectionCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyId",
            "sourceProviderType": "Integer"
          },
          {
            "type": "calculated",
            "name": "SectionKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "         [SchoolId]",
              " & \"^\" & [ClassroomIdentificationCode]",
              " & \"^\" & [LocalCourseCode]",
              " & \"^\" & [Term]",
              " & \"^\" & [SchoolId]",
              " & \"^\" & [UniqueSectionCode]",
              " & \"^\" & [ClassPeriodName]"
            ]
          },
          {
            "name": "StaffUSI",
            "dataType": "int64",
            "sourceColumn": "StaffUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ClassroomPosition",
            "dataType": "string",
            "sourceColumn": "ClassroomPosition",
            "sourceProviderType": "WChar"
          },
          {
            "name": "BeginDate",
            "dataType": "dateTime",
            "sourceColumn": "BeginDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          },
          {
            "name": "EndDate",
            "dataType": "dateTime",
            "sourceColumn": "EndDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          }
        ],
        "partitions": [
          {
            "name": "StaffSectionAssociation",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [StaffUSI]",
                "      ,[ClassroomIdentificationCode]",
                "      ,[SchoolId]",
                "      ,[ClassPeriodName]",
                "      ,[LocalCourseCode]",
                "      ,[SchoolYear]",
                "      ,[Term]",
                "      ,[UniqueSectionCode]",
                "      ,[ClassroomPosition]",
                "      ,[BeginDate]",
                "      ,[EndDate]",
                "      ,[LocalEducationAgencyId]",
                "  FROM [bi].[uniform.StaffSectionAssociation]",
                "WHERE LocalEducationAgencyId = 38"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [StaffUSI]",
                  "      ,[ClassroomIdentificationCode]",
                  "      ,[SchoolId]",
                  "      ,[ClassPeriodName]",
                  "      ,[LocalCourseCode]",
                  "      ,[SchoolYear]",
                  "      ,[Term]",
                  "      ,[UniqueSectionCode]",
                  "      ,[ClassroomPosition]",
                  "      ,[BeginDate]",
                  "      ,[EndDate]",
                  "      ,[LocalEducationAgencyId]",
                  "  FROM [bi].[uniform.StaffSectionAssociation]",
                  "WHERE LocalEducationAgencyId = 38</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [StaffUSI]",
              "      ,[ClassroomIdentificationCode]",
              "      ,[SchoolId]",
              "      ,[ClassPeriodName]",
              "      ,[LocalCourseCode]",
              "      ,[SchoolYear]",
              "      ,[Term]",
              "      ,[UniqueSectionCode]",
              "      ,[ClassroomPosition]",
              "      ,[BeginDate]",
              "      ,[EndDate]",
              "      ,[LocalEducationAgencyId]",
              "  FROM [bi].[uniform.StaffSectionAssociation]",
              "WHERE LocalEducationAgencyId = 38"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.StaffSectionAssociation"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [StaffUSI]",
              "      ,[ClassroomIdentificationCode]",
              "      ,[SchoolId]",
              "      ,[ClassPeriodName]",
              "      ,[LocalCourseCode]",
              "      ,[SchoolYear]",
              "      ,[Term]",
              "      ,[UniqueSectionCode]",
              "      ,[ClassroomPosition]",
              "      ,[BeginDate]",
              "      ,[EndDate]",
              "      ,[LocalEducationAgencyId]",
              "  FROM [bi].[uniform.StaffSectionAssociation]",
              "WHERE LocalEducationAgencyId = 38</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Staff",
        "isHidden": true,
        "columns": [
          {
            "name": "StaffUSI",
            "dataType": "int64",
            "sourceColumn": "StaffUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "StaffUniqueId",
            "dataType": "string",
            "sourceColumn": "StaffUniqueId",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersonalTitlePrefix",
            "dataType": "string",
            "sourceColumn": "PersonalTitlePrefix",
            "sourceProviderType": "WChar"
          },
          {
            "name": "FirstName",
            "dataType": "string",
            "sourceColumn": "FirstName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "MiddleName",
            "dataType": "string",
            "sourceColumn": "MiddleName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LastSurname",
            "dataType": "string",
            "sourceColumn": "LastSurname",
            "sourceProviderType": "WChar"
          },
          {
            "name": "GenerationCodeSuffix",
            "dataType": "string",
            "sourceColumn": "GenerationCodeSuffix",
            "sourceProviderType": "WChar"
          },
          {
            "name": "MaidenName",
            "dataType": "string",
            "sourceColumn": "MaidenName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ElectronicMailAddress",
            "dataType": "string",
            "sourceColumn": "ElectronicMailAddress",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StreetNumberName",
            "dataType": "string",
            "sourceColumn": "StreetNumberName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ApartmentRoomSuiteNumber",
            "dataType": "string",
            "sourceColumn": "ApartmentRoomSuiteNumber",
            "sourceProviderType": "WChar"
          },
          {
            "name": "City",
            "dataType": "string",
            "sourceColumn": "City",
            "sourceProviderType": "WChar"
          },
          {
            "name": "State",
            "dataType": "string",
            "sourceColumn": "State",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PostalCode",
            "dataType": "string",
            "sourceColumn": "PostalCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "SexType",
            "dataType": "string",
            "sourceColumn": "SexType",
            "sourceProviderType": "WChar"
          },
          {
            "name": "BirthDate",
            "dataType": "dateTime",
            "sourceColumn": "BirthDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          },
          {
            "name": "RaceType",
            "dataType": "string",
            "sourceColumn": "RaceType",
            "sourceProviderType": "WChar"
          },
          {
            "name": "HispanicLatinoEthnicity",
            "dataType": "boolean",
            "sourceColumn": "HispanicLatinoEthnicity",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "Boolean"
          },
          {
            "name": "OldEthnicityTypeId",
            "dataType": "int64",
            "sourceColumn": "OldEthnicityTypeId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "HighestCompletedLevelOfEducation",
            "dataType": "string",
            "sourceColumn": "HighestCompletedLevelOfEducation",
            "sourceProviderType": "WChar"
          },
          {
            "name": "YearsOfPriorProfessionalExperience",
            "dataType": "double",
            "sourceColumn": "YearsOfPriorProfessionalExperience",
            "sourceProviderType": "Numeric"
          },
          {
            "name": "YearsOfPriorTeachingExperience",
            "dataType": "double",
            "sourceColumn": "YearsOfPriorTeachingExperience",
            "sourceProviderType": "Numeric"
          },
          {
            "name": "HighlyQualifiedTeacher",
            "dataType": "boolean",
            "sourceColumn": "HighlyQualifiedTeacher",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "Boolean"
          },
          {
            "name": "LoginId",
            "dataType": "string",
            "sourceColumn": "LoginId",
            "sourceProviderType": "WChar"
          },
          {
            "name": "CitizenshipStatusTypeId",
            "dataType": "int64",
            "sourceColumn": "CitizenshipStatusTypeId",
            "sourceProviderType": "Integer"
          }
        ],
        "partitions": [
          {
            "name": "Staff",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [bi].[eq24.Staff].*",
                " FROM [bi].[eq24.Staff]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[eq24.Staff].*",
                  " FROM [bi].[eq24.Staff]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [bi].[eq24.Staff].*",
              " FROM [bi].[eq24.Staff]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.Staff"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[eq24.Staff].*",
              " FROM [bi].[eq24.Staff]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StaffEducationOrganizationAssignmentAssociation",
        "isHidden": true,
        "columns": [
          {
            "name": "StaffUSI",
            "dataType": "int64",
            "sourceColumn": "StaffUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SchoolID",
            "dataType": "int64",
            "sourceColumn": "SchoolID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "School",
            "dataType": "string",
            "sourceColumn": "School",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "District",
            "dataType": "string",
            "sourceColumn": "District",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StaffClassificationType",
            "dataType": "string",
            "sourceColumn": "StaffClassificationType",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StaffClassificationCode",
            "dataType": "string",
            "sourceColumn": "StaffClassificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StaffClassificationShortDescription",
            "dataType": "string",
            "sourceColumn": "StaffClassificationShortDescription",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StaffClassificationDescription",
            "dataType": "string",
            "sourceColumn": "StaffClassificationDescription",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PositionTitle",
            "dataType": "string",
            "sourceColumn": "PositionTitle",
            "sourceProviderType": "WChar"
          },
          {
            "name": "BeginDate",
            "dataType": "dateTime",
            "sourceColumn": "BeginDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          },
          {
            "name": "EndDate",
            "dataType": "dateTime",
            "sourceColumn": "EndDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          },
          {
            "type": "calculated",
            "name": "LoginID",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " LOOKUPVALUE(Staff[LoginId],Staff[StaffUSI],StaffEducationOrganizationAssignmentAssociation[StaffUSI])"
          }
        ],
        "partitions": [
          {
            "name": "StaffEducationOrganizationAssignmentAssociation",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [bi].[eq24.StaffEducationOrganizationAssignmentAssociation].* ",
                "FROM [bi].[eq24.StaffEducationOrganizationAssignmentAssociation]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[eq24.StaffEducationOrganizationAssignmentAssociation].* ",
                  "FROM [bi].[eq24.StaffEducationOrganizationAssignmentAssociation]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [bi].[eq24.StaffEducationOrganizationAssignmentAssociation].* ",
              "FROM [bi].[eq24.StaffEducationOrganizationAssignmentAssociation]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.StaffEducationOrganizationAssignmentAssociation"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[eq24.StaffEducationOrganizationAssignmentAssociation].* ",
              "FROM [bi].[eq24.StaffEducationOrganizationAssignmentAssociation]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Section",
        "columns": [
          {
            "name": "SchoolId",
            "dataType": "int64",
            "sourceColumn": "SchoolId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ClassPeriodName",
            "dataType": "string",
            "sourceColumn": "ClassPeriodName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ClassroomIdentificationCode",
            "dataType": "string",
            "sourceColumn": "ClassroomIdentificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LocalCourseCode",
            "dataType": "string",
            "sourceColumn": "LocalCourseCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Term",
            "dataType": "string",
            "sourceColumn": "Term",
            "sourceProviderType": "WChar"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "UniqueSectionCode",
            "dataType": "string",
            "sourceColumn": "UniqueSectionCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyId"
          },
          {
            "type": "calculated",
            "name": "SectionKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "         [SchoolId]",
              " & \"^\" & [ClassroomIdentificationCode]",
              " & \"^\" & [LocalCourseCode]",
              " & \"^\" & [Term]",
              " & \"^\" & [SchoolId]",
              " & \"^\" & [UniqueSectionCode]",
              " & \"^\" & [ClassPeriodName]"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Section",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT distinct [SchoolId]",
                "      ,[ClassPeriodName]",
                "      ,[ClassroomIdentificationCode]",
                "      ,[LocalCourseCode]",
                "      ,[Term]",
                "      ,[SchoolYear]",
                "      ,[UniqueSectionCode]",
                "      ,[LocalEducationAgencyId]",
                "  FROM [bi].[eq24.Section]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT distinct [SchoolId]",
                  "      ,[ClassPeriodName]",
                  "      ,[ClassroomIdentificationCode]",
                  "      ,[LocalCourseCode]",
                  "      ,[Term]",
                  "      ,[SchoolYear]",
                  "      ,[UniqueSectionCode]",
                  "      ,[LocalEducationAgencyId]",
                  "  FROM [bi].[eq24.Section]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT distinct [SchoolId]",
              "      ,[ClassPeriodName]",
              "      ,[ClassroomIdentificationCode]",
              "      ,[LocalCourseCode]",
              "      ,[Term]",
              "      ,[SchoolYear]",
              "      ,[UniqueSectionCode]",
              "      ,[LocalEducationAgencyId]",
              "  FROM [bi].[eq24.Section]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.Section"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT distinct [SchoolId]",
              "      ,[ClassPeriodName]",
              "      ,[ClassroomIdentificationCode]",
              "      ,[LocalCourseCode]",
              "      ,[Term]",
              "      ,[SchoolYear]",
              "      ,[UniqueSectionCode]",
              "      ,[LocalEducationAgencyId]",
              "  FROM [bi].[eq24.Section]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StudentAssessmentStudentObjectiveAssessmentPointsPossible",
        "isHidden": true,
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ReportingMethod",
            "dataType": "string",
            "sourceColumn": "ReportingMethod",
            "sourceProviderType": "WChar"
          },
          {
            "name": "IdentificationCode",
            "dataType": "string",
            "sourceColumn": "IdentificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "sourceColumn": "Namespace",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentUSI",
            "dataType": "int64",
            "sourceColumn": "StudentUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Result",
            "dataType": "int64",
            "sourceColumn": "Result",
            "formatString": "0",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ResultDatatype",
            "dataType": "string",
            "sourceColumn": "ResultDatatype",
            "sourceProviderType": "WChar"
          },
          {
            "type": "calculated",
            "name": "ObjectiveAssessmentKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "         [StudentUSI]",
              " & \"^\" & [StudentAssessmentIdentifier]"
            ]
          },
          {
            "type": "calculated",
            "name": "ObjectiveAssessmentResultKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "         [StudentUSI]",
              " & \"^\" & [StudentAssessmentIdentifier]",
              " & \"^\" & [IdentificationCode]"
            ]
          }
        ],
        "partitions": [
          {
            "name": "StudentAssessmentStudentObjectiveAssessmentPointsPossible",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [AssessmentIdentifier]",
                "      ,[ReportingMethod]",
                "      ,[IdentificationCode]",
                "      ,[Namespace]",
                "      ,[StudentAssessmentIdentifier]",
                "      ,[StudentUSI]",
                "      ,[Result]",
                "      ,[ResultDatatype]",
                "  FROM [bi].[eq24.StudentAssessmentStudentObjectiveAssessmentPointsPossible]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [AssessmentIdentifier]",
                  "      ,[ReportingMethod]",
                  "      ,[IdentificationCode]",
                  "      ,[Namespace]",
                  "      ,[StudentAssessmentIdentifier]",
                  "      ,[StudentUSI]",
                  "      ,[Result]",
                  "      ,[ResultDatatype]",
                  "  FROM [bi].[eq24.StudentAssessmentStudentObjectiveAssessmentPointsPossible]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [AssessmentIdentifier]",
              "      ,[ReportingMethod]",
              "      ,[IdentificationCode]",
              "      ,[Namespace]",
              "      ,[StudentAssessmentIdentifier]",
              "      ,[StudentUSI]",
              "      ,[Result]",
              "      ,[ResultDatatype]",
              "  FROM [bi].[eq24.StudentAssessmentStudentObjectiveAssessmentPointsPossible]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.StudentAssessmentStudentObjectiveAssessmentPointsPossible"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [AssessmentIdentifier]",
              "      ,[ReportingMethod]",
              "      ,[IdentificationCode]",
              "      ,[Namespace]",
              "      ,[StudentAssessmentIdentifier]",
              "      ,[StudentUSI]",
              "      ,[Result]",
              "      ,[ResultDatatype]",
              "  FROM [bi].[eq24.StudentAssessmentStudentObjectiveAssessmentPointsPossible]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "ObjectiveAssessmentIdentificationCode",
        "isHidden": true,
        "columns": [
          {
            "name": "AssessmentTitle",
            "dataType": "string",
            "sourceColumn": "AssessmentTitle",
            "sourceProviderType": "Char"
          },
          {
            "name": "IdentificationCode",
            "dataType": "string",
            "sourceColumn": "IdentificationCode",
            "sourceProviderType": "Char"
          },
          {
            "name": "ObjectiveContent",
            "dataType": "string",
            "sourceColumn": "ObjectiveContent",
            "sourceProviderType": "Char"
          },
          {
            "name": "Category",
            "dataType": "string",
            "sourceColumn": "Category"
          }
        ],
        "partitions": [
          {
            "name": "ObjectiveAssessmentIdentificationCode",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [AssessmentTitle]",
                "      ,[Category]",
                "      ,[IdentificationCode]",
                "      ,[ObjectiveContent]",
                "  FROM [dbo].[ObjectiveAssessmentIdentificationCode]"
              ],
              "dataSource": "PowerBI Database"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [AssessmentTitle]",
                  "      ,[Category]",
                  "      ,[IdentificationCode]",
                  "      ,[ObjectiveContent]",
                  "  FROM [dbo].[ObjectiveAssessmentIdentificationCode]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [AssessmentTitle]",
              "      ,[Category]",
              "      ,[IdentificationCode]",
              "      ,[ObjectiveContent]",
              "  FROM [dbo].[ObjectiveAssessmentIdentificationCode]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "ObjectiveAssessmentIdentificationCode"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "dbo"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [AssessmentTitle]",
              "      ,[Category]",
              "      ,[IdentificationCode]",
              "      ,[ObjectiveContent]",
              "  FROM [dbo].[ObjectiveAssessmentIdentificationCode]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StudentAssessmentStudentObjectiveAssessmentScoreResult",
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ReportingMethod",
            "dataType": "string",
            "sourceColumn": "ReportingMethod",
            "sourceProviderType": "WChar"
          },
          {
            "name": "IdentificationCode",
            "dataType": "string",
            "sourceColumn": "IdentificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "sourceColumn": "Namespace",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentUSI",
            "dataType": "int64",
            "sourceColumn": "StudentUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Result",
            "dataType": "int64",
            "sourceColumn": "Result",
            "formatString": "0",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ResultDatatype",
            "dataType": "string",
            "sourceColumn": "ResultDatatype",
            "sourceProviderType": "WChar"
          },
          {
            "type": "calculated",
            "name": "Result%",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF(StudentAssessmentStudentObjectiveAssessmentScoreResult[Points Possible] = BLANK(),BLANK(),",
              "([Result])/RELATED(StudentAssessmentStudentObjectiveAssessmentPointsPossible[Result]))"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "type": "calculated",
            "name": "ObjectiveAssessmentKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "         [StudentUSI]",
              " & \"^\" & [StudentAssessmentIdentifier]"
            ]
          },
          {
            "type": "calculated",
            "name": "ObjectiveAssessmentResultKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "         [StudentUSI]",
              " & \"^\" & [StudentAssessmentIdentifier]",
              " & \"^\" & [IdentificationCode]"
            ]
          },
          {
            "type": "calculated",
            "name": "Objective",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " MID([IdentificationCode],1,2)"
          },
          {
            "type": "calculated",
            "name": "Objective Content",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF(MID([AssessmentIdentifier],1,3) = \"FSA\", ",
              "LOOKUPVALUE(ObjectiveAssessmentIdentificationCode[ObjectiveContent],ObjectiveAssessmentIdentificationCode[IdentificationCode],[Objective],",
              "                                    ObjectiveAssessmentIdentificationCode[Category], \"FSA\"                                  ",
              "),",
              "BLANK()",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Points Possible",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "RELATED(StudentAssessmentStudentObjectiveAssessmentPointsPossible[Result])"
          }
        ],
        "partitions": [
          {
            "name": "StudentAssessmentStudentObjectiveAssessmentScoreResult",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [AssessmentIdentifier]",
                "      ,[ReportingMethod]",
                "      ,[IdentificationCode]",
                "      ,[Namespace]",
                "      ,[StudentAssessmentIdentifier]",
                "      ,[StudentUSI]",
                "      ,[Result]",
                "      ,[ResultDatatype]",
                "  FROM [bi].[EQ24.StudentAssessmentStudentObjectiveAssessmentScoreResult]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [AssessmentIdentifier]",
                  "      ,[ReportingMethod]",
                  "      ,[IdentificationCode]",
                  "      ,[Namespace]",
                  "      ,[StudentAssessmentIdentifier]",
                  "      ,[StudentUSI]",
                  "      ,[Result]",
                  "      ,[ResultDatatype]",
                  "  FROM [bi].[EQ24.StudentAssessmentStudentObjectiveAssessmentScoreResult]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Objective Assessment Raw Score Summary",
            "expression": [
              "",
              "",
              "var AssessmentRawScore = ",
              "           SUMMARIZE(FILTER(StudentAssessmentStudentObjectiveAssessmentScoreResult,StudentAssessmentStudentObjectiveAssessmentScoreResult[Points Possible] <> BLANK()),",
              "                            ",
              "                            StudentAssessmentStudentObjectiveAssessmentScoreResult[ObjectiveAssessmentKey],",
              "                             \"SumResult\",SUM(StudentAssessmentStudentObjectiveAssessmentScoreResult[Result]))",
              "return ",
              "",
              "CALCULATE(AVERAGEX(AssessmentRawScore, VALUE([SumResult])))",
              "",
              ""
            ]
          },
          {
            "name": "Objective Assessment Possible Score Summary",
            "expression": [
              "",
              "",
              "var AssessmentPossibleScore = ",
              "           SUMMARIZE(FILTER(StudentAssessmentStudentObjectiveAssessmentScoreResult,StudentAssessmentStudentObjectiveAssessmentScoreResult[Points Possible] <> BLANK()),",
              "                            ",
              "                            StudentAssessmentStudentObjectiveAssessmentScoreResult[ObjectiveAssessmentKey],",
              "                             \"SumResult\",SUM(StudentAssessmentStudentObjectiveAssessmentScoreResult[Points Possible]))",
              "return ",
              "",
              "CALCULATE(AVERAGEX(AssessmentPossibleScore, VALUE([SumResult])))",
              "",
              ""
            ]
          },
          {
            "name": "Objective Assessment Raw Score Percent",
            "expression": [
              "",
              "",
              "var PercentCorrect = ([Objective Assessment Raw Score Summary] *100)/[Objective Assessment Possible Score Summary]",
              "",
              "return ROUND(PercentCorrect,2)"
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [AssessmentIdentifier]",
              "      ,[ReportingMethod]",
              "      ,[IdentificationCode]",
              "      ,[Namespace]",
              "      ,[StudentAssessmentIdentifier]",
              "      ,[StudentUSI]",
              "      ,[Result]",
              "      ,[ResultDatatype]",
              "  FROM [bi].[EQ24.StudentAssessmentStudentObjectiveAssessmentScoreResult]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.StudentAssessmentStudentObjectiveAssessmentScoreResult"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [AssessmentIdentifier]",
              "      ,[ReportingMethod]",
              "      ,[IdentificationCode]",
              "      ,[Namespace]",
              "      ,[StudentAssessmentIdentifier]",
              "      ,[StudentUSI]",
              "      ,[Result]",
              "      ,[ResultDatatype]",
              "  FROM [bi].[EQ24.StudentAssessmentStudentObjectiveAssessmentScoreResult]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "MC_ObjectiveAssessmentPerformanceLevel",
        "isHidden": true,
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AssessmentReportingMethodTypeId",
            "dataType": "int64",
            "sourceColumn": "AssessmentReportingMethodTypeId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "IdentificationCode",
            "dataType": "string",
            "sourceColumn": "IdentificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "sourceColumn": "Namespace",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PerformanceLevelDescriptorId",
            "dataType": "int64",
            "sourceColumn": "PerformanceLevelDescriptorId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Description",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "WChar"
          },
          {
            "name": "MinimumScore",
            "dataType": "string",
            "sourceColumn": "MinimumScore",
            "sourceProviderType": "WChar"
          },
          {
            "name": "MaximumScore",
            "dataType": "string",
            "sourceColumn": "MaximumScore",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ResultDatatypeTypeId",
            "dataType": "int64",
            "sourceColumn": "ResultDatatypeTypeId",
            "sourceProviderType": "Integer"
          }
        ],
        "partitions": [
          {
            "name": "uniformMC_ObjectiveAssessmentPerformanceLevel",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [bi].[eq24.MC_ObjectiveAssessmentPerformanceLevel].*",
                " FROM [bi].[eq24.MC_ObjectiveAssessmentPerformanceLevel]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[eq24.MC_ObjectiveAssessmentPerformanceLevel].*",
                  " FROM [bi].[eq24.MC_ObjectiveAssessmentPerformanceLevel]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [bi].[eq24.MC_ObjectiveAssessmentPerformanceLevel].*",
              " FROM [bi].[eq24.MC_ObjectiveAssessmentPerformanceLevel]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.MC_ObjectiveAssessmentPerformanceLevel"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[eq24.MC_ObjectiveAssessmentPerformanceLevel].*",
              " FROM [bi].[eq24.MC_ObjectiveAssessmentPerformanceLevel]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "MC_StudentAssessmentScoreResult",
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentUSI",
            "dataType": "int64",
            "sourceColumn": "StudentUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "AdministrationDate",
            "dataType": "dateTime",
            "sourceColumn": "AdministrationDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "AcademicSubject",
            "dataType": "string",
            "sourceColumn": "AcademicSubject",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AssessmentReportingMethodTypeId",
            "dataType": "int64",
            "sourceColumn": "AssessmentReportingMethodTypeId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "AssessmentTitle",
            "dataType": "string",
            "sourceColumn": "AssessmentTitle",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Result",
            "dataType": "string",
            "sourceColumn": "Result",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Version",
            "dataType": "int64",
            "sourceColumn": "Version",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "sourceColumn": "Namespace",
            "sourceProviderType": "WChar"
          },
          {
            "type": "calculated",
            "name": "ObjectiveAssessmentKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "         [StudentUSI]",
              " & \"^\" & [AssessmentIdentifier]",
              " & \"^\" & [StudentAssessmentIdentifier]"
            ]
          },
          {
            "type": "calculated",
            "name": "SchoolYear",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "",
              "IF(MONTH(([AdministrationDate])) < 8, YEAR([AdministrationDate]), ",
              "IF(MONTH([AdministrationDate]) = 8 && DAY([AdministrationDate]) < 11, YEAR([AdministrationDate]),",
              "",
              "",
              "YEAR([AdministrationDate]) + 1",
              "))"
            ]
          },
          {
            "type": "calculated",
            "name": "Current School ID",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "RELATED(Student[Current School ID])"
          }
        ],
        "partitions": [
          {
            "name": "uniformMC_StudentAssessmentScoreResult",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [bi].[eq24.MC_StudentAssessmentScoreResult].* ",
                "FROM [bi].[eq24.MC_StudentAssessmentScoreResult]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[eq24.MC_StudentAssessmentScoreResult].* ",
                  "FROM [bi].[eq24.MC_StudentAssessmentScoreResult]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [bi].[eq24.MC_StudentAssessmentScoreResult].* ",
              "FROM [bi].[eq24.MC_StudentAssessmentScoreResult]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.MC_StudentAssessmentScoreResult"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[eq24.MC_StudentAssessmentScoreResult].* ",
              "FROM [bi].[eq24.MC_StudentAssessmentScoreResult]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "MC_StudentAssessmentStudentObjectiveAssessmentScoreResult",
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ReportingMethod",
            "dataType": "string",
            "sourceColumn": "ReportingMethod",
            "sourceProviderType": "WChar"
          },
          {
            "name": "IdentificationCode",
            "dataType": "string",
            "sourceColumn": "IdentificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ObjejctiveDescription",
            "dataType": "string",
            "sourceColumn": "ObjejctiveDescription",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "sourceColumn": "Namespace",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentUSI",
            "dataType": "int64",
            "sourceColumn": "StudentUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Result",
            "dataType": "int64",
            "sourceColumn": "Result",
            "formatString": "0",
            "sourceProviderType": "WChar"
          },
          {
            "name": "MaxRawScore",
            "dataType": "int64",
            "sourceColumn": "MaxRawScore",
            "formatString": "0",
            "sourceProviderType": "Integer"
          },
          {
            "name": "LearningStandardItemCode",
            "dataType": "string",
            "sourceColumn": "LearningStandardItemCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LearningStandardDescription",
            "dataType": "string",
            "sourceColumn": "LearningStandardDescription",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PerformanceLevel",
            "dataType": "string",
            "sourceColumn": "PerformanceLevel",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ResultDatatype",
            "dataType": "string",
            "sourceColumn": "ResultDatatype",
            "sourceProviderType": "WChar"
          },
          {
            "type": "calculated",
            "name": "ObjectiveAssessmentKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "         [StudentUSI]",
              " & \"^\" & [AssessmentIdentifier]",
              " & \"^\" & [StudentAssessmentIdentifier]"
            ]
          },
          {
            "type": "calculated",
            "name": "LearningStandard",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.6.RP.\") = TRUE(),\"Ratio and Proportional Relationships\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.7.RP.\") = TRUE(),\"Ratio and Proportional Relationships\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.6.EE\") = TRUE(),\"Expressions and Equations\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.7.EE\") = TRUE(),\"Expressions and Equations\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.8.EE\") = TRUE(),\"Expressions and Equations\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.K.G\") = TRUE(),\"Geometry\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.1.G\") = TRUE(),\"Geometry\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.2.G\") = TRUE(),\"Geometry\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.3.G\") = TRUE(),\"Geometry\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.4.G\") = TRUE(),\"Geometry\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.5.G\") = TRUE(),\"Geometry\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.6.G\") = TRUE(),\"Geometry\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.7.G\") = TRUE(),\"Geometry\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.8.G\") = TRUE(),\"Geometry\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.6.SP\") = TRUE(),\" Statistics and Probability\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.7.SP\") = TRUE(),\" Statistics and Probability\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.8.SP\") = TRUE(),\" Statistics and Probability\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.6.NS\") = TRUE(),\"The Number System\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.7.NS\") = TRUE(),\"The Number System\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.8.NS\") = TRUE(),\"The Number System\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],{\"MAFS.8.F\"}) = TRUE(),\"Functions\",",
              "BLANK()                                         ",
              ")))))))))))))))))))))"
            ]
          }
        ],
        "partitions": [
          {
            "name": "uniformMC_StudentAssessmentStudentObjectiveAssessmentScoreResult",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [bi].[eq24.MC_StudentAssessmentStudentObjectiveAssessmentScoreResult].*",
                " FROM [bi].[eq24.MC_StudentAssessmentStudentObjectiveAssessmentScoreResult]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[eq24.MC_StudentAssessmentStudentObjectiveAssessmentScoreResult].*",
                  " FROM [bi].[eq24.MC_StudentAssessmentStudentObjectiveAssessmentScoreResult]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "MC^Objective Assessment Raw Score Summary",
            "expression": [
              "",
              "",
              "var AssessmentRawScore = ",
              "           SUMMARIZE(FILTER('MC_StudentAssessmentStudentObjectiveAssessmentScoreResult','MC_StudentAssessmentStudentObjectiveAssessmentScoreResult'[MaxRawScore] <> BLANK()),",
              "                            ",
              "                            'MC_StudentAssessmentStudentObjectiveAssessmentScoreResult'[ObjectiveAssessmentKey],",
              "                             \"SumResult\",SUM('MC_StudentAssessmentStudentObjectiveAssessmentScoreResult'[Result]))",
              "return ",
              "",
              "CALCULATE(AVERAGEX(AssessmentRawScore, VALUE([SumResult])))",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ]
          },
          {
            "name": "MC^Objective Assessment Possible Score Summary",
            "expression": [
              "",
              "",
              "",
              "var AssessmentPossibleScore = ",
              "           SUMMARIZE(FILTER('MC_StudentAssessmentStudentObjectiveAssessmentScoreResult','MC_StudentAssessmentStudentObjectiveAssessmentScoreResult'[MaxRawScore] <> BLANK()),",
              "                            ",
              "                            'MC_StudentAssessmentStudentObjectiveAssessmentScoreResult'[ObjectiveAssessmentKey],",
              "                             \"SumResult\",SUM('MC_StudentAssessmentStudentObjectiveAssessmentScoreResult'[MaxRawScore]))",
              "return ",
              "",
              "CALCULATE(AVERAGEX(AssessmentPossibleScore, VALUE([SumResult])))",
              "",
              ""
            ]
          },
          {
            "name": "MC^Objective Assessment Raw Score Percent",
            "expression": [
              "",
              "",
              "var PercentCorrect = ([MC^Objective Assessment Raw Score Summary] *100)/[MC^Objective Assessment Possible Score Summary]",
              "",
              "return ROUND(PercentCorrect,2)"
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [bi].[eq24.MC_StudentAssessmentStudentObjectiveAssessmentScoreResult].*",
              " FROM [bi].[eq24.MC_StudentAssessmentStudentObjectiveAssessmentScoreResult]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.MC_StudentAssessmentStudentObjectiveAssessmentScoreResult"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[eq24.MC_StudentAssessmentStudentObjectiveAssessmentScoreResult].*",
              " FROM [bi].[eq24.MC_StudentAssessmentStudentObjectiveAssessmentScoreResult]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "iReady_StudentAssessmentReportingMethod",
        "isHidden": true,
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentUSI",
            "dataType": "int64",
            "sourceColumn": "StudentUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "AdministrationDate",
            "dataType": "dateTime",
            "sourceColumn": "AdministrationDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          },
          {
            "name": "WhenAssessedGradeLevel",
            "dataType": "string",
            "sourceColumn": "WhenAssessedGradeLevel",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AcademicSubject",
            "dataType": "string",
            "sourceColumn": "AcademicSubject",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AssessmentReportingMethod",
            "dataType": "string",
            "sourceColumn": "AssessmentReportingMethod",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AssessmentTitle",
            "dataType": "string",
            "sourceColumn": "AssessmentTitle",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Result",
            "dataType": "string",
            "sourceColumn": "Result",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Version",
            "dataType": "int64",
            "sourceColumn": "Version",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "sourceColumn": "Namespace",
            "sourceProviderType": "WChar"
          }
        ],
        "partitions": [
          {
            "name": "iReady_StudentAssessmentReportingMethod",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [bi].[eq24.iReady_StudentAssessmentReportingMethod].*",
                " FROM [bi].[eq24.iReady_StudentAssessmentReportingMethod]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[eq24.iReady_StudentAssessmentReportingMethod].*",
                  " FROM [bi].[eq24.iReady_StudentAssessmentReportingMethod]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [bi].[eq24.iReady_StudentAssessmentReportingMethod].*",
              " FROM [bi].[eq24.iReady_StudentAssessmentReportingMethod]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.iReady_StudentAssessmentReportingMethod"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[eq24.iReady_StudentAssessmentReportingMethod].*",
              " FROM [bi].[eq24.iReady_StudentAssessmentReportingMethod]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "iReady_StudentAssessmentScoreResult",
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentUSI",
            "dataType": "int64",
            "sourceColumn": "StudentUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "AdministrationDate",
            "dataType": "dateTime",
            "sourceColumn": "AdministrationDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "AdministrationEndDate",
            "dataType": "dateTime",
            "sourceColumn": "AdministrationEndDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "WhenAssessedGradeLevel",
            "dataType": "string",
            "sourceColumn": "WhenAssessedGradeLevel",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AcademicSubject",
            "dataType": "string",
            "sourceColumn": "AcademicSubject",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AssessmentReportingMethod",
            "dataType": "string",
            "sourceColumn": "AssessmentReportingMethod",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AssessmentTitle",
            "dataType": "string",
            "sourceColumn": "AssessmentTitle",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Result",
            "dataType": "int64",
            "sourceColumn": "Result",
            "formatString": "0",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Version",
            "dataType": "int64",
            "sourceColumn": "Version",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "sourceColumn": "Namespace",
            "sourceProviderType": "WChar"
          },
          {
            "type": "calculated",
            "name": "Proficiency Level",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " LOOKUPVALUE('iReady_StudentAssessmentReportingMethod'[Result],'iReady_StudentAssessmentReportingMethod'[AssessmentReportingMethod],\"Proficiency level\",",
              "                                                             'iReady_StudentAssessmentReportingMethod'[StudentAssessmentIdentifier],'iReady_StudentAssessmentScoreResult'[StudentAssessmentIdentifier])  ",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "Quontile Measure",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " LOOKUPVALUE('iReady_StudentAssessmentReportingMethod'[Result],'iReady_StudentAssessmentReportingMethod'[AssessmentReportingMethod],\"Quantile Measure\",",
              "                                                             'iReady_StudentAssessmentReportingMethod'[StudentAssessmentIdentifier],'iReady_StudentAssessmentScoreResult'[StudentAssessmentIdentifier]) "
            ]
          },
          {
            "type": "calculated",
            "name": "Time On Task (minutes)",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " LOOKUPVALUE('iReady_StudentAssessmentReportingMethod'[Result],'iReady_StudentAssessmentReportingMethod'[AssessmentReportingMethod],\"Time on Task (minutes)\",",
              "                                                             'iReady_StudentAssessmentReportingMethod'[StudentAssessmentIdentifier],'iReady_StudentAssessmentScoreResult'[StudentAssessmentIdentifier]) "
            ]
          },
          {
            "type": "calculated",
            "name": "Quontile Range",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " LOOKUPVALUE('iReady_StudentAssessmentReportingMethod'[Result],'iReady_StudentAssessmentReportingMethod'[AssessmentReportingMethod],\"Quantile Range\",",
              "                                                             'iReady_StudentAssessmentReportingMethod'[StudentAssessmentIdentifier],",
              "                                                             'iReady_StudentAssessmentScoreResult'[StudentAssessmentIdentifier]) "
            ]
          },
          {
            "type": "calculated",
            "name": "Annual Typical Growth Measure",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " LOOKUPVALUE('iReady_StudentAssessmentReportingMethod'[Result],'iReady_StudentAssessmentReportingMethod'[AssessmentReportingMethod],\"Annual Typical Growth Measure\",",
              "                                                             'iReady_StudentAssessmentReportingMethod'[StudentAssessmentIdentifier],'iReady_StudentAssessmentScoreResult'[StudentAssessmentIdentifier]) "
            ]
          },
          {
            "type": "calculated",
            "name": "Annual Stretch Growth Measure",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " LOOKUPVALUE('iReady_StudentAssessmentReportingMethod'[Result],'iReady_StudentAssessmentReportingMethod'[AssessmentReportingMethod],\"Annual Stretch Growth Measure\",",
              "                                                             'iReady_StudentAssessmentReportingMethod'[StudentAssessmentIdentifier],'iReady_StudentAssessmentScoreResult'[StudentAssessmentIdentifier]) "
            ]
          },
          {
            "type": "calculated",
            "name": "Mid On Grade Level Scale Score",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " LOOKUPVALUE('iReady_StudentAssessmentReportingMethod'[Result],'iReady_StudentAssessmentReportingMethod'[AssessmentReportingMethod],\"Mid On Grade Level Scale Score\",",
              "                                                             'iReady_StudentAssessmentReportingMethod'[StudentAssessmentIdentifier],'iReady_StudentAssessmentScoreResult'[StudentAssessmentIdentifier]) "
            ]
          },
          {
            "type": "calculated",
            "name": "ObjectiveAssessmentKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "         [StudentUSI]",
              " & \"^\" & [AssessmentIdentifier]",
              " & \"^\" & [StudentAssessmentIdentifier]"
            ]
          },
          {
            "type": "calculated",
            "name": "Current School ID",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "RELATED(Student[Current School ID])"
          },
          {
            "type": "calculated",
            "name": "SchoolYear",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "",
              "IF(MONTH(([AdministrationEndDate])) < 8, YEAR([AdministrationEndDate]), ",
              "IF(MONTH([AdministrationEndDate]) = 8 && DAY([AdministrationEndDate]) < 11, YEAR([AdministrationEndDate]),",
              "",
              "",
              "YEAR([AdministrationEndDate]) + 1",
              "))"
            ]
          }
        ],
        "partitions": [
          {
            "name": "iReady_StudentAssessmentScoreResult",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [bi].[eq24.iReady_StudentAssessmentScoreResult].* ",
                "FROM [bi].[eq24.iReady_StudentAssessmentScoreResult]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[eq24.iReady_StudentAssessmentScoreResult].* ",
                  "FROM [bi].[eq24.iReady_StudentAssessmentScoreResult]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [bi].[eq24.iReady_StudentAssessmentScoreResult].* ",
              "FROM [bi].[eq24.iReady_StudentAssessmentScoreResult]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.iReady_StudentAssessmentScoreResult"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[eq24.iReady_StudentAssessmentScoreResult].* ",
              "FROM [bi].[eq24.iReady_StudentAssessmentScoreResult]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel",
        "isHidden": true,
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ReportingMethod",
            "dataType": "string",
            "sourceColumn": "ReportingMethod",
            "sourceProviderType": "WChar"
          },
          {
            "name": "IdentificationCode",
            "dataType": "string",
            "sourceColumn": "IdentificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ObjejctiveDescription",
            "dataType": "string",
            "sourceColumn": "ObjejctiveDescription",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "sourceColumn": "Namespace",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentUSI",
            "dataType": "int64",
            "sourceColumn": "StudentUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Result",
            "dataType": "string",
            "sourceColumn": "Result",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ResultDatatype",
            "dataType": "string",
            "sourceColumn": "ResultDatatype",
            "sourceProviderType": "WChar"
          }
        ],
        "partitions": [
          {
            "name": "iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [bi].[eq24.iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel].*",
                " FROM [bi].[eq24.iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[eq24.iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel].*",
                  " FROM [bi].[eq24.iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [bi].[eq24.iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel].*",
              " FROM [bi].[eq24.iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[eq24.iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel].*",
              " FROM [bi].[eq24.iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult",
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ReportingMethod",
            "dataType": "string",
            "sourceColumn": "ReportingMethod",
            "sourceProviderType": "WChar"
          },
          {
            "name": "IdentificationCode",
            "dataType": "string",
            "sourceColumn": "IdentificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "sourceColumn": "Namespace",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentUSI",
            "dataType": "int64",
            "sourceColumn": "StudentUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Result",
            "dataType": "int64",
            "sourceColumn": "Result",
            "formatString": "0",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ResultDatatype",
            "dataType": "string",
            "sourceColumn": "ResultDatatype",
            "sourceProviderType": "WChar"
          },
          {
            "type": "calculated",
            "name": "Proficiency Level",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " LOOKUPVALUE('iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel'[Result]",
              ",'iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel'[StudentAssessmentIdentifier],'iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult'[StudentAssessmentIdentifier]",
              ",'iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel'[IdentificationCode],'iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult'[IdentificationCode])"
            ]
          },
          {
            "type": "calculated",
            "name": "ObjectiveAssessmentKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "         [StudentUSI]",
              " & \"^\" & [AssessmentIdentifier]",
              " & \"^\" & [StudentAssessmentIdentifier]"
            ]
          },
          {
            "name": "ObjectiveDescription",
            "dataType": "string",
            "sourceColumn": "ObjectiveDescription"
          }
        ],
        "partitions": [
          {
            "name": "iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [AssessmentIdentifier]",
                "      ,[ReportingMethod]",
                "      ,[IdentificationCode]",
                "      ,[ObjectiveDescription]",
                "      ,[Namespace]",
                "      ,[StudentAssessmentIdentifier]",
                "      ,[StudentUSI]",
                "      ,[Result]",
                "      ,[ResultDatatype]",
                "  FROM [bi].[eq24.iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [AssessmentIdentifier]",
                  "      ,[ReportingMethod]",
                  "      ,[IdentificationCode]",
                  "      ,[ObjectiveDescription]",
                  "      ,[Namespace]",
                  "      ,[StudentAssessmentIdentifier]",
                  "      ,[StudentUSI]",
                  "      ,[Result]",
                  "      ,[ResultDatatype]",
                  "  FROM [bi].[eq24.iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [AssessmentIdentifier]",
              "      ,[ReportingMethod]",
              "      ,[IdentificationCode]",
              "      ,[ObjectiveDescription]",
              "      ,[Namespace]",
              "      ,[StudentAssessmentIdentifier]",
              "      ,[StudentUSI]",
              "      ,[Result]",
              "      ,[ResultDatatype]",
              "  FROM [bi].[eq24.iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [AssessmentIdentifier]",
              "      ,[ReportingMethod]",
              "      ,[IdentificationCode]",
              "      ,[ObjectiveDescription]",
              "      ,[Namespace]",
              "      ,[StudentAssessmentIdentifier]",
              "      ,[StudentUSI]",
              "      ,[Result]",
              "      ,[ResultDatatype]",
              "  FROM [bi].[eq24.iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StudentAssessmentScoreResultGrouped",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "AcademicSubject",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[AcademicSubject]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[AssessmentIdentifier]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "AssessmentReportingMethodTypeId",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[AssessmentReportingMethodTypeId]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "AssessmentTitle",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[AssessmentTitle]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "StudentUSI",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[StudentUSI]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "GradeLevel",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[GradeLevel]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "AdministrationDate",
            "dataType": "dateTime",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[AdministrationDate]",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Result",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "LOOKUPVALUE(StudentAssessmentScoreResult[Result],",
              "",
              "StudentAssessmentScoreResult[AcademicSubject],StudentAssessmentScoreResultGrouped[AcademicSubject],",
              "StudentAssessmentScoreResult[AssessmentIdentifier],StudentAssessmentScoreResultGrouped[AssessmentIdentifier],",
              "StudentAssessmentScoreResult[AssessmentReportingMethodTypeId],StudentAssessmentScoreResultGrouped[AssessmentReportingMethodTypeId],",
              "StudentAssessmentScoreResult[AssessmentTitle],StudentAssessmentScoreResultGrouped[AssessmentTitle],",
              "StudentAssessmentScoreResult[StudentUSI],StudentAssessmentScoreResultGrouped[StudentUSI],",
              "StudentAssessmentScoreResult[GradeLevel],StudentAssessmentScoreResultGrouped[GradeLevel],",
              "StudentAssessmentScoreResult[Namespace],StudentAssessmentScoreResultGrouped[Namespace],",
              "StudentAssessmentScoreResult[AdministrationDate],StudentAssessmentScoreResultGrouped[AdministrationDate])",
              "",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "Achievement Level %",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "LOOKUPVALUE(StudentAssessmentScoreResult[Achievement Level %],",
              "",
              "StudentAssessmentScoreResult[AcademicSubject],StudentAssessmentScoreResultGrouped[AcademicSubject],",
              "StudentAssessmentScoreResult[AssessmentIdentifier],StudentAssessmentScoreResultGrouped[AssessmentIdentifier],",
              "StudentAssessmentScoreResult[AssessmentReportingMethodTypeId],StudentAssessmentScoreResultGrouped[AssessmentReportingMethodTypeId],",
              "StudentAssessmentScoreResult[AssessmentTitle],StudentAssessmentScoreResultGrouped[AssessmentTitle],",
              "StudentAssessmentScoreResult[StudentUSI],StudentAssessmentScoreResultGrouped[StudentUSI],",
              "StudentAssessmentScoreResult[GradeLevel],StudentAssessmentScoreResultGrouped[GradeLevel],",
              "StudentAssessmentScoreResult[Namespace],StudentAssessmentScoreResultGrouped[Namespace],",
              "StudentAssessmentScoreResult[AdministrationDate],StudentAssessmentScoreResultGrouped[AdministrationDate])",
              "",
              ""
            ],
            "formatString": "0.00"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Namespace",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Namespace]"
          },
          {
            "type": "calculated",
            "name": "KeyStudentAssessment",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "",
              "[AcademicSubject] & \"^\" & ",
              "[AssessmentIdentifier] & \"^\" & ",
              "[AssessmentReportingMethodTypeId] & \"^\" & ",
              "[StudentUSI] & \"^\" & ",
              "[AdministrationDate] & \"^\" & ",
              "[Namespace]"
            ]
          },
          {
            "type": "calculated",
            "name": "LearningGainLevel",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "LOOKUPVALUE(StudentAssessmentScoreResult[LearningGainLevel],",
              "",
              "StudentAssessmentScoreResult[AcademicSubject],StudentAssessmentScoreResultGrouped[AcademicSubject],",
              "StudentAssessmentScoreResult[AssessmentIdentifier],StudentAssessmentScoreResultGrouped[AssessmentIdentifier],",
              "StudentAssessmentScoreResult[AssessmentReportingMethodTypeId],StudentAssessmentScoreResultGrouped[AssessmentReportingMethodTypeId],",
              "StudentAssessmentScoreResult[AssessmentTitle],StudentAssessmentScoreResultGrouped[AssessmentTitle],",
              "StudentAssessmentScoreResult[StudentUSI],StudentAssessmentScoreResultGrouped[StudentUSI],",
              "StudentAssessmentScoreResult[GradeLevel],StudentAssessmentScoreResultGrouped[GradeLevel],",
              "StudentAssessmentScoreResult[Namespace],StudentAssessmentScoreResultGrouped[Namespace],",
              "StudentAssessmentScoreResult[AdministrationDate],StudentAssessmentScoreResultGrouped[AdministrationDate])",
              "",
              ""
            ]
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                " ",
                "GROUPBY(StudentAssessmentScoreResult,",
                "[AcademicSubject],",
                "[AssessmentIdentifier],",
                "[AssessmentReportingMethodTypeId],",
                "[AssessmentTitle],",
                "[StudentUSI],",
                "[GradeLevel],",
                "[Namespace],",
                "\"AdministrationDate\",MAXX(CURRENTGROUP(),[AdministrationDate])",
                "",
                ")",
                " /*  GROUPBY(Grade",
                ",Grade[StudentUSI]",
                ",Grade[SchoolYear]",
                ",Grade[LocalCourseCode]",
                ",Grade[UniqueSectionCode]",
                ",Grade[Term]",
                ",Grade[LocalEducationAgencyId]",
                ",\"SectionBeginDate\", MAXX(CURRENTGROUP(),Grade[SectionBeginDate])",
                ")*/",
                ""
              ]
            }
          }
        ]
      },
      {
        "name": "StaffEducationOrganizationAssignmentAssociation_test",
        "columns": [
          {
            "name": "SchoolID",
            "dataType": "int64",
            "sourceColumn": "SchoolID",
            "formatString": "0",
            "sourceProviderType": "Integer"
          },
          {
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyId",
            "formatString": "0",
            "sourceProviderType": "Integer"
          },
          {
            "name": "StaffClassificationType",
            "dataType": "string",
            "sourceColumn": "StaffClassificationType",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PositionTitle",
            "dataType": "string",
            "sourceColumn": "PositionTitle",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LoginID",
            "dataType": "string",
            "sourceColumn": "LoginID",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StaffUSI",
            "dataType": "int64",
            "sourceColumn": "StaffUSI",
            "formatString": "0",
            "sourceProviderType": "Integer"
          }
        ],
        "partitions": [
          {
            "name": "StaffEducationOrganizationAssignmentAssociation_test_Levy",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [dbo].[StaffEducationOrganizationAssignmentAssociation_test].* ",
                "FROM [dbo].[StaffEducationOrganizationAssignmentAssociation_test]",
                "WHERE LocalEducationAgencyId = 38"
              ],
              "dataSource": "PowerBI Database"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [dbo].[StaffEducationOrganizationAssignmentAssociation_test].* ",
                  "FROM [dbo].[StaffEducationOrganizationAssignmentAssociation_test]",
                  "WHERE LocalEducationAgencyId = 38</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Username",
            "expression": " USERNAME()"
          },
          {
            "name": "RLS_StaffUSI",
            "expression": [
              " CALCULATE(",
              "\t\tFIRSTNONBLANK(StaffEducationOrganizationAssignmentAssociation_test[StaffUSI], TRUE()),",
              "\t\tFILTER(StaffEducationOrganizationAssignmentAssociation_test, StaffEducationOrganizationAssignmentAssociation_test[LoginID] = [Username])",
              "\t             )"
            ]
          },
          {
            "name": "RLS_SchoolId",
            "expression": [
              " CALCULATE(",
              "\t\tFIRSTNONBLANK(StaffEducationOrganizationAssignmentAssociation_test[SchoolId], TRUE()),",
              "\t\tFILTER(StaffEducationOrganizationAssignmentAssociation_test, StaffEducationOrganizationAssignmentAssociation_test[LoginID] = [Username])",
              "\t             )"
            ]
          },
          {
            "name": "RLS_DistrictId",
            "expression": [
              " CALCULATE(",
              "\t\tFIRSTNONBLANK(StaffEducationOrganizationAssignmentAssociation_test[LocalEducationAgencyId], TRUE()),",
              "\t\tFILTER(StaffEducationOrganizationAssignmentAssociation_test, StaffEducationOrganizationAssignmentAssociation_test[LoginID] = [Username])",
              "\t             )"
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [dbo].[StaffEducationOrganizationAssignmentAssociation_test].* ",
              "FROM [dbo].[StaffEducationOrganizationAssignmentAssociation_test]",
              "WHERE LocalEducationAgencyId = 38"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "StaffEducationOrganizationAssignmentAssociation_test_Levy"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "dbo"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [dbo].[StaffEducationOrganizationAssignmentAssociation_test].* ",
              "FROM [dbo].[StaffEducationOrganizationAssignmentAssociation_test]",
              "WHERE LocalEducationAgencyId = 38</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "FSA_LearningGains",
        "columns": [
          {
            "name": "Assessment Title",
            "dataType": "string",
            "sourceColumn": "Assessment",
            "sourceProviderType": "WChar"
          },
          {
            "name": "GradeLevel",
            "dataType": "int64",
            "sourceColumn": "GradeLevel",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ScoreLevel",
            "dataType": "int64",
            "sourceColumn": "ScoreLevel",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SubLevel",
            "dataType": "string",
            "sourceColumn": "SubLevel",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Min",
            "dataType": "int64",
            "sourceColumn": "Min",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Max",
            "dataType": "int64",
            "sourceColumn": "Max",
            "sourceProviderType": "Integer"
          },
          {
            "type": "calculated",
            "name": "LearningGainLevel",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF(MID([Assessment Title],1,4) = \"FSA \" && [ScoreLevel] = 1 && [SubLevel] = \"Low\",1.1,",
              "IF(MID([Assessment Title],1,4) = \"FSA \" && [ScoreLevel] = 1 && [SubLevel] = \"Middle\",1.2,",
              "IF(MID([Assessment Title],1,4) = \"FSA \" && [ScoreLevel] = 1 && [SubLevel] = \"High\",1.3,",
              "IF(MID([Assessment Title],1,4) = \"FSA \" && [ScoreLevel] = 2 && [SubLevel] = \"Low\",2.1,",
              "IF(MID([Assessment Title],1,4) = \"FSA \" && [ScoreLevel] = 2 && [SubLevel] = \"High\",2.3,",
              "IF(MID([Assessment Title],1,4) = \"FSA \" && [ScoreLevel] = 3 && [SubLevel] = \"Overall\",3.0,",
              "IF(MID([Assessment Title],1,4) = \"FSA \" && [ScoreLevel] = 4 && [SubLevel] = \"Overall\",4.0,",
              "IF(MID([Assessment Title],1,4) = \"FSA \" && [ScoreLevel] = 5 && [SubLevel] = \"Overall\",5.0,",
              "",
              "IF(MID([Assessment Title],1,4) = \"FSAA\" && [ScoreLevel] = 1 && [SubLevel] = \"Low\",1.1,",
              "IF(MID([Assessment Title],1,4) = \"FSAA\" && [ScoreLevel] = 1 && [SubLevel] = \"Middle\",1.2,",
              "IF(MID([Assessment Title],1,4) = \"FSAA\" && [ScoreLevel] = 1 && [SubLevel] = \"High\",1.3,",
              "IF(MID([Assessment Title],1,4) = \"FSAA\" && [ScoreLevel] = 2 && [SubLevel] = \"Low\",2.1,",
              "IF(MID([Assessment Title],1,4) = \"FSAA\" && [ScoreLevel] = 2 && [SubLevel] = \"High\",2.3,",
              "IF(MID([Assessment Title],1,4) = \"FSAA\" && [ScoreLevel] = 3 && [SubLevel] = \"Low\",3.1,",
              "IF(MID([Assessment Title],1,4) = \"FSAA\" && [ScoreLevel] = 3 && [SubLevel] = \"High\",3.3,",
              "IF(MID([Assessment Title],1,4) = \"FSAA\" && [ScoreLevel] = 4 && [SubLevel] = \"Overall\",4.0,",
              "BLANK()",
              "))))))))))))))))"
            ]
          },
          {
            "type": "calculated",
            "name": "AssessmentTitle",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF([Assessment Title] = \"FSA ELA\", \"FSA ELA Reading\",",
              "IF([Assessment Title] = \"FSA Algebra 1\", \"FSA Algebra I\",",
              "IF([Assessment Title] = \"FSA Algebra 2\", \"FSA Algebra II\",",
              "IF([Assessment Title] = \"FSA Geometry\", \"FSA Geometry\",",
              "IF([Assessment Title] = \"FSA Math\", \"FSA Mathematics\",",
              "IF([Assessment Title] = \"FSAA Access Algebra 1\", \"FA1 Algebra 1\",",
              "IF([Assessment Title] = \"FSAA Access Geometry\", \"FA1 Geometry\",",
              "IF([Assessment Title] = \"FSAA ELA\", \"FA1 ELA\",",
              "IF([Assessment Title] = \"FSAA Math\", \"FA1 Mathematics\"",
              ")))))))))"
            ]
          }
        ],
        "partitions": [
          {
            "name": "FSA_LearningGains",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [dbo].[FSA_LearningGains].* FROM [dbo].[FSA_LearningGains] ",
              "dataSource": "PowerBI Database"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"TableWidgetSerialization\"><AnnotationContent><![CDATA[<?xml version=\"1.0\"?>",
                  "<TableWidgetGridSerialization xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">",
                  "  <ColumnSuggestedType />",
                  "  <ColumnFormat />",
                  "  <ColumnAccuracy />",
                  "  <ColumnCurrencySymbol />",
                  "  <ColumnPositivePattern />",
                  "  <ColumnNegativePattern />",
                  "  <ColumnWidths>",
                  "    <item>",
                  "      <key>",
                  "        <string>Assessment</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>87</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>GradeLevel</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>84</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>ScoreLevel</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>82</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SubLevel</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>73</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Min</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>46</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Max</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>50</int>",
                  "      </value>",
                  "    </item>",
                  "  </ColumnWidths>",
                  "  <ColumnDisplayIndex>",
                  "    <item>",
                  "      <key>",
                  "        <string>Assessment</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>0</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>GradeLevel</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>1</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>ScoreLevel</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>2</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SubLevel</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>3</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Min</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>4</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Max</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>5</int>",
                  "      </value>",
                  "    </item>",
                  "  </ColumnDisplayIndex>",
                  "  <ColumnFrozen />",
                  "  <ColumnChecked />",
                  "  <ColumnFilter />",
                  "  <SelectionFilter />",
                  "  <FilterParameters />",
                  "  <IsSortDescending>false</IsSortDescending>",
                  "</TableWidgetGridSerialization>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [dbo].[FSA_LearningGains].* FROM [dbo].[FSA_LearningGains] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "FSA_LearningGains"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "dbo"
          },
          {
            "name": "TableWidgetSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"TableWidgetSerialization\"><AnnotationContent><![CDATA[<?xml version=\"1.0\"?>",
              "<TableWidgetGridSerialization xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">",
              "  <ColumnSuggestedType />",
              "  <ColumnFormat />",
              "  <ColumnAccuracy />",
              "  <ColumnCurrencySymbol />",
              "  <ColumnPositivePattern />",
              "  <ColumnNegativePattern />",
              "  <ColumnWidths>",
              "    <item>",
              "      <key>",
              "        <string>Assessment</string>",
              "      </key>",
              "      <value>",
              "        <int>87</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>GradeLevel</string>",
              "      </key>",
              "      <value>",
              "        <int>84</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>ScoreLevel</string>",
              "      </key>",
              "      <value>",
              "        <int>82</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SubLevel</string>",
              "      </key>",
              "      <value>",
              "        <int>73</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Min</string>",
              "      </key>",
              "      <value>",
              "        <int>46</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Max</string>",
              "      </key>",
              "      <value>",
              "        <int>50</int>",
              "      </value>",
              "    </item>",
              "  </ColumnWidths>",
              "  <ColumnDisplayIndex>",
              "    <item>",
              "      <key>",
              "        <string>Assessment</string>",
              "      </key>",
              "      <value>",
              "        <int>0</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>GradeLevel</string>",
              "      </key>",
              "      <value>",
              "        <int>1</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>ScoreLevel</string>",
              "      </key>",
              "      <value>",
              "        <int>2</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SubLevel</string>",
              "      </key>",
              "      <value>",
              "        <int>3</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Min</string>",
              "      </key>",
              "      <value>",
              "        <int>4</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Max</string>",
              "      </key>",
              "      <value>",
              "        <int>5</int>",
              "      </value>",
              "    </item>",
              "  </ColumnDisplayIndex>",
              "  <ColumnFrozen />",
              "  <ColumnChecked />",
              "  <ColumnFilter />",
              "  <SelectionFilter />",
              "  <FilterParameters />",
              "  <IsSortDescending>false</IsSortDescending>",
              "</TableWidgetGridSerialization>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "806f2297-b7f3-4cb2-8818-7958279252fc",
        "fromTable": "StudentProgramAssociation",
        "fromColumn": "StudentUSI",
        "toTable": "Student",
        "toColumn": "StudentUSI"
      },
      {
        "name": "3d542fa5-15a1-4a6d-b574-e10c0bd191f4",
        "fromTable": "StaffEducationOrganizationAssignmentAssociation",
        "fromColumn": "SchoolID",
        "toTable": "School",
        "toColumn": "SchoolId"
      },
      {
        "name": "3dbe7166-4e95-49fe-9288-2dde4ef847ab",
        "fromTable": "StudentSectionAssociation",
        "fromColumn": "SectionKey",
        "toTable": "Section",
        "toColumn": "SectionKey"
      },
      {
        "name": "93f00328-47b4-45c9-97cd-f245353e20b9",
        "fromTable": "StaffEducationOrganizationAssignmentAssociation",
        "fromColumn": "StaffUSI",
        "toTable": "Staff",
        "toColumn": "StaffUSI",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "129117be-ba0a-4ad3-b132-ae342eaa539d",
        "fromTable": "StudentSectionAssociation",
        "fromColumn": "StudentSectionKey",
        "toTable": "StudentCourseCurrent",
        "toColumn": "StudentSectionKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "9fe9d41c-c40a-4241-b03d-c320bd8df992",
        "fromTable": "StaffSectionAssociation",
        "fromColumn": "StaffUSI",
        "toTable": "Staff",
        "toColumn": "StaffUSI"
      },
      {
        "name": "92e41242-3208-4a89-b78d-b7c8c69b2262",
        "fromTable": "StaffSectionAssociation",
        "fromColumn": "SectionKey",
        "toTable": "Section",
        "toColumn": "SectionKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "108cf4df-03e5-4b48-9e3c-f598d0a841c8",
        "fromTable": "StudentAssessmentStudentObjectiveAssessmentScoreResult",
        "fromColumn": "ObjectiveAssessmentKey",
        "toTable": "StudentAssessmentScoreResult",
        "toColumn": "ObjectiveAssessmentKey"
      },
      {
        "name": "fcefe157-b2cc-4dc9-84be-a84b47547002",
        "fromCardinality": "one",
        "fromTable": "StudentAssessmentStudentObjectiveAssessmentPointsPossible",
        "fromColumn": "ObjectiveAssessmentResultKey",
        "toTable": "StudentAssessmentStudentObjectiveAssessmentScoreResult",
        "toColumn": "ObjectiveAssessmentResultKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "68cd1e13-9202-4503-87aa-784a96ca7dd7",
        "fromTable": "MC_StudentAssessmentStudentObjectiveAssessmentScoreResult",
        "fromColumn": "ObjectiveAssessmentKey",
        "toTable": "MC_StudentAssessmentScoreResult",
        "toColumn": "ObjectiveAssessmentKey"
      },
      {
        "name": "b3598b49-8d01-4c7d-8113-339c92a6da2a",
        "fromTable": "iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult",
        "fromColumn": "ObjectiveAssessmentKey",
        "toTable": "iReady_StudentAssessmentScoreResult",
        "toColumn": "ObjectiveAssessmentKey"
      },
      {
        "name": "e8936bb9-0d35-4fab-9f3e-87ec444482b6",
        "fromTable": "StudentAssessmentScoreResult",
        "fromColumn": "KeyStudentAssessment",
        "toTable": "StudentAssessmentScoreResultGrouped",
        "toColumn": "KeyStudentAssessment",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "ff33b342-a96f-47a9-a66a-99950d7c0ba4",
        "fromTable": "StudentSectionAssociation",
        "fromColumn": "StudentUSI",
        "toTable": "Student",
        "toColumn": "StudentUSI",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "2dcfb646-1065-4ff9-92d5-619416b9a567",
        "fromTable": "iReady_StudentAssessmentScoreResult",
        "fromColumn": "StudentUSI",
        "toTable": "Student",
        "toColumn": "StudentUSI",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "041fcac9-d5dc-4984-b845-f62b290fbabd",
        "fromTable": "StudentAssessmentScoreResult",
        "fromColumn": "StudentUSI",
        "toTable": "Student",
        "toColumn": "StudentUSI",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "8fd53a17-f173-447f-b791-34490bc8a520",
        "fromTable": "MC_StudentAssessmentScoreResult",
        "fromColumn": "StudentUSI",
        "toTable": "Student",
        "toColumn": "StudentUSI",
        "crossFilteringBehavior": "bothDirections"
      }
    ],
    "roles": [
      {
        "name": "District",
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "StaffEducationOrganizationAssignmentAssociation_test",
            "filterExpression": " StaffEducationOrganizationAssignmentAssociation_test[StaffUSI]= [RLS_StaffUSI]"
          }
        ]
      },
      {
        "name": "Teacher",
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "Staff",
            "filterExpression": " Staff[StaffUSI] = [RLS_StaffUSI]"
          },
          {
            "name": "StaffEducationOrganizationAssignmentAssociation",
            "filterExpression": " StaffEducationOrganizationAssignmentAssociation[StaffUSI]= [RLS_StaffUSI]"
          },
          {
            "name": "Section",
            "filterExpression": [
              "[SectionKey] IN SELECTCOLUMNS(FILTER(",
              "StaffSectionAssociation,RELATED(Staff[StaffUSI]) = [RLS_StaffUSI]",
              "),",
              "\"SectionKey\",",
              "[SectionKey])"
            ]
          },
          {
            "name": "StaffEducationOrganizationAssignmentAssociation_test",
            "filterExpression": " StaffEducationOrganizationAssignmentAssociation_test[StaffUSI]= [RLS_StaffUSI]"
          },
          {
            "name": "StudentSectionAssociation",
            "filterExpression": "StudentSectionAssociation[SchoolId] = [RLS_SchoolId]"
          },
          {
            "name": "Student",
            "filterExpression": "Student[Current School ID] = [RLS_SchoolId]"
          },
          {
            "name": "iReady_StudentAssessmentScoreResult",
            "filterExpression": "iReady_StudentAssessmentScoreResult[Current School ID] = [RLS_SchoolId]"
          },
          {
            "name": "StudentAssessmentScoreResult",
            "filterExpression": "StudentAssessmentScoreResult[Current School ID] = [RLS_SchoolId]"
          },
          {
            "name": "MC_StudentAssessmentScoreResult",
            "filterExpression": "MC_StudentAssessmentScoreResult[Current School ID] = [RLS_SchoolId]"
          }
        ]
      },
      {
        "name": "School",
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "StudentSectionAssociation",
            "filterExpression": "StudentSectionAssociation[SchoolId] = [RLS_SchoolId]"
          },
          {
            "name": "StaffSectionAssociation",
            "filterExpression": "StaffSectionAssociation[SchoolId] = [RLS_SchoolId]"
          },
          {
            "name": "Section",
            "filterExpression": "Section[SchoolId] = [RLS_SchoolId]"
          },
          {
            "name": "Student",
            "filterExpression": "Student[Current School ID] = [RLS_SchoolId]"
          },
          {
            "name": "School",
            "filterExpression": "School[SchoolId] = [RLS_SchoolId]"
          },
          {
            "name": "StudentAssessmentScoreResult",
            "filterExpression": "StudentAssessmentScoreResult[Current School ID] = [RLS_SchoolId]"
          },
          {
            "name": "MC_StudentAssessmentScoreResult",
            "filterExpression": "MC_StudentAssessmentScoreResult[Current School ID] = [RLS_SchoolId]"
          },
          {
            "name": "iReady_StudentAssessmentScoreResult",
            "filterExpression": "iReady_StudentAssessmentScoreResult[Current School ID] = [RLS_SchoolId]"
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "400"
      }
    ]
  },
  "id": "SemanticModel"
}